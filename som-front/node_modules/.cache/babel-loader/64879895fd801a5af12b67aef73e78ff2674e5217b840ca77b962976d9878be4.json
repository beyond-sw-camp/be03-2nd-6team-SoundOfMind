{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"row justify-content-center mt-5\"\n};\nconst _hoisted_3 = {\n  class: \"col-md-6\"\n};\nconst _hoisted_4 = {\n  class: \"card\"\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"card-header text-center\",\n  style: {\n    \"color\": \"black\"\n  }\n}, \"회원가입\", -1 /* HOISTED */);\nconst _hoisted_6 = {\n  class: \"card-body\"\n};\nconst _hoisted_7 = {\n  class: \"mb-3\"\n};\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"email\",\n  class: \"form-label\"\n}, \"이메일 주소\", -1 /* HOISTED */);\nconst _hoisted_9 = {\n  class: \"mb-3\"\n};\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"nickname\",\n  class: \"form-label\"\n}, \"닉네임\", -1 /* HOISTED */);\nconst _hoisted_11 = {\n  class: \"mb-3\"\n};\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"password\",\n  class: \"form-label\"\n}, \"비밀번호\", -1 /* HOISTED */);\nconst _hoisted_13 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\",\n  class: \"btn btn-primary w-100\"\n}, \"가입하기\", -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_hoisted_5, _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"form\", {\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => $options.submitForm && $options.submitForm(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_7, [_hoisted_8, _withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    class: \"form-control\",\n    id: \"email\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.email = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.email]])]), _createElementVNode(\"div\", _hoisted_9, [_hoisted_10, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"form-control\",\n    id: \"nickname\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.nickname = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.nickname]])]), _createElementVNode(\"div\", _hoisted_11, [_hoisted_12, _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    class: \"form-control\",\n    id: \"password\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.password = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.password]])]), _hoisted_13], 32 /* NEED_HYDRATION */)])])])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","style","for","type","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","onSubmit","_cache","_withModifiers","args","$options","submitForm","_hoisted_7","_hoisted_8","id","$event","$data","email","_hoisted_9","_hoisted_10","nickname","_hoisted_11","_hoisted_12","password","_hoisted_13"],"sources":["/Users/song/Desktop/springproject/som-front/src/views/MemberCreate.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"row justify-content-center mt-5\">\n      <div class=\"col-md-6\">\n        <div class=\"card\">\n          <div class=\"card-header text-center\" style=\"color: black;\">회원가입</div>\n          <div class=\"card-body\">\n            <form @submit.prevent=\"submitForm\">\n              <div class=\"mb-3\">\n                <label for=\"email\" class=\"form-label\">이메일 주소</label>\n                <input type=\"email\" class=\"form-control\" id=\"email\" v-model=\"email\">\n              </div>\n              <div class=\"mb-3\">\n                <label for=\"nickname\" class=\"form-label\">닉네임</label>\n                <input type=\"text\" class=\"form-control\" id=\"nickname\" v-model=\"nickname\">\n              </div>\n              <div class=\"mb-3\">\n                <label for=\"password\" class=\"form-label\">비밀번호</label>\n                <input type=\"password\" class=\"form-control\" id=\"password\" v-model=\"password\">\n              </div>\n              <button type=\"submit\" class=\"btn btn-primary w-100\">가입하기</button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      email: \"\",\n      nickname: \"\",\n      password: \"\",\n    };\n  },\n  methods: {\n    async submitForm(){\n      try {\n        const requestData = {\n          email: this.email,\n          nickname: this.nickname,\n          password: this.password\n        };\n\n        const token = localStorage.getItem('token');\n        const headers = token ? { Authorization: `Bearer ${token}` } : {};\n\n        await axios.post(`${process.env.VUE_APP_API_BASE_URL}/admin/account/signup`, requestData, { headers });\n\n        // 성공적으로 작성된 경우 리다이렉트 또는 다른 처리 수행\n        this.$router.push({ name: 'LoginComponent' });\n      } catch (error) {\n        // 오류 발생 시 처리\n        console.error(error);\n        alert(\"입력값 확인 필요\");\n      }\n    }\n  }\n};\n</script>\n\n<style>\n.container {\n  height: 100vh;\n}\n\n.card {\n  margin-top: 50px;\n  border-radius: 10px;\n  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);\n}\n\n.card-header {\n  background-color: #007bff;\n  color: white;\n  border-radius: 10px 10px 0 0;\n}\n\n.btn-primary {\n  background-color: #007bff;\n  border-color: #007bff;\n}\n\n.btn-primary:hover {\n  background-color: #0056b3;\n  border-color: #0056b3;\n}\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAW;;EACfA,KAAK,EAAC;AAAiC;;EACrCA,KAAK,EAAC;AAAU;;EACdA,KAAK,EAAC;AAAM;gCACfC,mBAAA,CAAqE;EAAhED,KAAK,EAAC,yBAAyB;EAACE,KAAqB,EAArB;IAAA;EAAA;GAAsB,MAAI;;EAC1DF,KAAK,EAAC;AAAW;;EAEbA,KAAK,EAAC;AAAM;gCACfC,mBAAA,CAAoD;EAA7CE,GAAG,EAAC,OAAO;EAACH,KAAK,EAAC;GAAa,QAAM;;EAGzCA,KAAK,EAAC;AAAM;iCACfC,mBAAA,CAAoD;EAA7CE,GAAG,EAAC,UAAU;EAACH,KAAK,EAAC;GAAa,KAAG;;EAGzCA,KAAK,EAAC;AAAM;iCACfC,mBAAA,CAAqD;EAA9CE,GAAG,EAAC,UAAU;EAACH,KAAK,EAAC;GAAa,MAAI;iCAG/CC,mBAAA,CAAiE;EAAzDG,IAAI,EAAC,QAAQ;EAACJ,KAAK,EAAC;GAAwB,MAAI;;uBAnBpEK,mBAAA,CAyBM,OAzBNC,UAyBM,GAxBJL,mBAAA,CAuBM,OAvBNM,UAuBM,GAtBJN,mBAAA,CAqBM,OArBNO,UAqBM,GApBJP,mBAAA,CAmBM,OAnBNQ,UAmBM,GAlBJC,UAAqE,EACrET,mBAAA,CAgBM,OAhBNU,UAgBM,GAfJV,mBAAA,CAcO;IAdAW,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAPzBC,cAAA,KAAAC,IAAA,KAOmCC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;MAC/Bd,mBAAA,CAGM,OAHNiB,UAGM,GAFJC,UAAoD,E,gBACpDlB,mBAAA,CAAoE;IAA7DG,IAAI,EAAC,OAAO;IAACJ,KAAK,EAAC,cAAc;IAACoB,EAAE,EAAC,OAAO;IAVnE,uBAAAP,MAAA,QAAAA,MAAA,MAAAQ,MAAA,IAU6EC,KAAA,CAAAC,KAAK,GAAAF,MAAA;iDAALC,KAAA,CAAAC,KAAK,E,KAEpEtB,mBAAA,CAGM,OAHNuB,UAGM,GAFJC,WAAoD,E,gBACpDxB,mBAAA,CAAyE;IAAlEG,IAAI,EAAC,MAAM;IAACJ,KAAK,EAAC,cAAc;IAACoB,EAAE,EAAC,UAAU;IAdrE,uBAAAP,MAAA,QAAAA,MAAA,MAAAQ,MAAA,IAc+EC,KAAA,CAAAI,QAAQ,GAAAL,MAAA;iDAARC,KAAA,CAAAI,QAAQ,E,KAEzEzB,mBAAA,CAGM,OAHN0B,WAGM,GAFJC,WAAqD,E,gBACrD3B,mBAAA,CAA6E;IAAtEG,IAAI,EAAC,UAAU;IAACJ,KAAK,EAAC,cAAc;IAACoB,EAAE,EAAC,UAAU;IAlBzE,uBAAAP,MAAA,QAAAA,MAAA,MAAAQ,MAAA,IAkBmFC,KAAA,CAAAO,QAAQ,GAAAR,MAAA;iDAARC,KAAA,CAAAO,QAAQ,E,KAE7EC,WAAiE,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}