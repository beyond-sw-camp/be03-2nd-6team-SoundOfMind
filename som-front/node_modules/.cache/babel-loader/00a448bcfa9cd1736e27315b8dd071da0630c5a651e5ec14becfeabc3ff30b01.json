{"ast":null,"code":"import axios from 'axios';\nimport { jwtDecode } from 'jwt-decode';\nexport default {\n  data() {\n    return {\n      email: \"\",\n      password: \"\"\n    };\n  },\n  methods: {\n    async doLogin() {\n      // 2가지의 예외가능성\n\n      // 1. 200번대 상태값 + 토큰x \n      // 2. 200번대 상태값x -> 분기처리\n      try {\n        const loginData = {\n          email: this.email,\n          password: this.password\n        };\n        const response = await axios.post(`${process.env.VUE_APP_API_BASE_URL}/admin/account/signin`, loginData);\n        // axios.post(`http://localhost:8000/admin/account/signin`,loginData).then((value)=> {\n        //   console.log(value)\n        // })\n        const token = response?.data?.data.token;\n        console.log(token);\n        if (token) {\n          const decoded = jwtDecode(token);\n          localStorage.setItem(\"token\", token); // 로그인 성공시\n          localStorage.setItem(\"role\", decoded.role);\n          // created함수는 reload될때 1번만 실행되는 hook함수\n          // 그런데, router.push를 통한 화면전환은 reload를 실행시키지 않으므로, created함수 호출이 되지 않음\n          window.location.href = \"/\";\n        } else {\n          alert(\"Loign failed\");\n        }\n      } catch (error) {\n        const error_message = error.response.data.error_message;\n        if (error_message) {\n          console.log(error_message);\n          alert(error_message);\n        } else {\n          console.log(error);\n          alert(\"Loign failed\");\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","jwtDecode","data","email","password","methods","doLogin","loginData","response","post","process","env","VUE_APP_API_BASE_URL","token","console","log","decoded","localStorage","setItem","role","window","location","href","alert","error","error_message"],"sources":["/Users/song/Desktop/springproject/som-front/src/views/LoginComponent.vue"],"sourcesContent":["<template>\n  <div class=\"flex min-h-full flex-1 flex-col justify-center px-6 py-12 lg:px-8\">\n    <div class=\"sm:mx-auto sm:w-full sm:max-w-sm bg-white rounded-lg shadow-lg\">\n      <div class=\"px-6 py-12\">\n        <img class=\"mx-auto h-15 w-auto\" src=\"@/assets/sommain.png\" alt=\"Your Company\" />\n        <h2 class=\"mt-10 text-center text-2xl font-bold leading-9 tracking-tight text-gray-900\">WE ARE Sound Of Mind</h2>\n      </div>\n\n      <div id=\"update-form\" class=\"px-6 py-8\">\n        <form @submit.prevent=\"doLogin\" class=\"space-y-6\" action=\"#\" method=\"POST\">\n          <div>\n            <label for=\"email\" class=\"block text-sm font-medium leading-6 text-gray-900\">Email address</label>\n            <div class=\"mt-2\">\n              <input v-model=\"email\" type=\"email\" class=\"block w-full rounded-md border-0 py-1.5 pl-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\" />\n            </div>\n          </div>\n\n          <div>\n            <div class=\"flex items-center justify-between\">\n              <label for=\"password\" class=\"block text-sm font-medium leading-6 text-gray-900\">Password</label>\n            </div>\n            <div class=\"mt-2\">\n              <input v-model=\"password\" type=\"password\" class=\"block w-full rounded-md border-0 py-1.5 pl-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\" />\n            </div>\n          </div>\n\n          <div>\n            <button type=\"submit\" class=\"flex w-full justify-center rounded-md bg-indigo-600 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\">Sign in</button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport {jwtDecode} from 'jwt-decode';\nexport default {\n    data(){\n        return{\n            email:\"\",\n            password:\"\"\n        }\n    },\n    methods:{\n      async doLogin(){\n        // 2가지의 예외가능성\n\n        // 1. 200번대 상태값 + 토큰x \n        // 2. 200번대 상태값x -> 분기처리\n      try{\n        const loginData = {email:this.email, password:this.password};\n        const response = await axios.post(`${process.env.VUE_APP_API_BASE_URL}/admin/account/signin`,loginData);\n        // axios.post(`http://localhost:8000/admin/account/signin`,loginData).then((value)=> {\n        //   console.log(value)\n        // })\n        const token = response?.data?.data.token\n        console.log(token)\n        if(token){\n          const decoded = jwtDecode(token)\n          localStorage.setItem(\"token\",token) // 로그인 성공시\n          localStorage.setItem(\"role\",decoded.role)\n        // created함수는 reload될때 1번만 실행되는 hook함수\n        // 그런데, router.push를 통한 화면전환은 reload를 실행시키지 않으므로, created함수 호출이 되지 않음\n          window.location.href =\"/\";\n        }else{\n           alert(\"Loign failed\")\n        }\n        \n      }catch(error){\n        const error_message = error.response.data.error_message\n        if (error_message){\n          console.log(error_message)\n          alert(error_message)\n        }\n        else{\n          console.log(error)\n          alert(\"Loign failed\")\n        }\n      }\n    }\n  }\n}\n</script>"],"mappings":"AAoCA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAAQC,SAAS,QAAO,YAAY;AACpC,eAAe;EACXC,IAAIA,CAAA,EAAE;IACF,OAAM;MACFC,KAAK,EAAC,EAAE;MACRC,QAAQ,EAAC;IACb;EACJ,CAAC;EACDC,OAAO,EAAC;IACN,MAAMC,OAAOA,CAAA,EAAE;MACb;;MAEA;MACA;MACF,IAAG;QACD,MAAMC,SAAQ,GAAI;UAACJ,KAAK,EAAC,IAAI,CAACA,KAAK;UAAEC,QAAQ,EAAC,IAAI,CAACA;QAAQ,CAAC;QAC5D,MAAMI,QAAO,GAAI,MAAMR,KAAK,CAACS,IAAI,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,oBAAqB,uBAAsB,EAACL,SAAS,CAAC;QACvG;QACA;QACA;QACA,MAAMM,KAAI,GAAIL,QAAQ,EAAEN,IAAI,EAAEA,IAAI,CAACW,KAAI;QACvCC,OAAO,CAACC,GAAG,CAACF,KAAK;QACjB,IAAGA,KAAK,EAAC;UACP,MAAMG,OAAM,GAAIf,SAAS,CAACY,KAAK;UAC/BI,YAAY,CAACC,OAAO,CAAC,OAAO,EAACL,KAAK,GAAE;UACpCI,YAAY,CAACC,OAAO,CAAC,MAAM,EAACF,OAAO,CAACG,IAAI;UAC1C;UACA;UACEC,MAAM,CAACC,QAAQ,CAACC,IAAG,GAAG,GAAG;QAC3B,CAAC,MAAI;UACFC,KAAK,CAAC,cAAc;QACvB;MAEF,CAAC,QAAMC,KAAK,EAAC;QACX,MAAMC,aAAY,GAAID,KAAK,CAAChB,QAAQ,CAACN,IAAI,CAACuB,aAAY;QACtD,IAAIA,aAAa,EAAC;UAChBX,OAAO,CAACC,GAAG,CAACU,aAAa;UACzBF,KAAK,CAACE,aAAa;QACrB,OACI;UACFX,OAAO,CAACC,GAAG,CAACS,KAAK;UACjBD,KAAK,CAAC,cAAc;QACtB;MACF;IACF;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}