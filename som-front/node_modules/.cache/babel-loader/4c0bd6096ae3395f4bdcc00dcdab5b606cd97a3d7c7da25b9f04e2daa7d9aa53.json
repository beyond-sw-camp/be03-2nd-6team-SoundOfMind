{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelSelect as _vModelSelect, withDirectives as _withDirectives, vModelText as _vModelText, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"page-header text-center\",\n  style: {\n    \"margin-top\": \"20px\"\n  }\n};\nconst _hoisted_3 = {\n  class: \"d-flex justify-content-between\",\n  style: {\n    \"margin-top\": \"20px\"\n  }\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"optional\"\n}, \"선택\", -1 /* HOISTED */);\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"postid\"\n}, \"게시글 번호\", -1 /* HOISTED */);\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"title\"\n}, \"제목\", -1 /* HOISTED */);\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"member\"\n}, \"글쓴이\", -1 /* HOISTED */);\nconst _hoisted_8 = [_hoisted_4, _hoisted_5, _hoisted_6, _hoisted_7];\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"검색\", -1 /* HOISTED */);\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"a\", {\n  href: \"/postcreate\"\n}, [/*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"btn btn-primary\",\n  type: \"submit\",\n  value: \"작성\"\n}, \"게시글 작성\")], -1 /* HOISTED */);\nconst _hoisted_11 = {\n  class: \"table\"\n};\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"게시글 번호\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"제목\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"글쓴이(rank)\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"작성일\")])], -1 /* HOISTED */);\nconst _hoisted_13 = [\"href\"];\nconst _hoisted_14 = {\n  key: 0\n};\nconst _hoisted_15 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_PaginationComponent = _resolveComponent(\"PaginationComponent\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"h1\", null, _toDisplayString($props.pageTitle), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.searchPosts && $options.searchPosts(...args), [\"prevent\"])),\n    style: {\n      \"display\": \"flex\",\n      \"align-items\": \"center\"\n    }\n  }, [_withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.searchType = $event),\n    style: {\n      \"width\": \"auto\",\n      \"margin-right\": \"5px\"\n    }\n  }, [..._hoisted_8], 512 /* NEED_PATCH */), [[_vModelSelect, $data.searchType]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.searchValue = $event),\n    type: \"text\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.searchValue]]), _hoisted_9], 32 /* NEED_HYDRATION */), _hoisted_10]), _createElementVNode(\"table\", _hoisted_11, [_hoisted_12, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.postList, post => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: post.postId\n    }, [_createElementVNode(\"td\", null, _toDisplayString(post.id), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"a\", {\n      href: `/posts/${post.id}/detail`\n    }, _toDisplayString($options.truncate(post.title)), 9 /* TEXT, PROPS */, _hoisted_13)]), _createElementVNode(\"td\", null, _toDisplayString(post.nickname + '(' + post.rank + ')'), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(post.createdAt), 1 /* TEXT */), $props.isAdmin ? (_openBlock(), _createElementBlock(\"td\", _hoisted_14, [_createElementVNode(\"button\", {\n      onClick: $event => $options.deletePost(post.id),\n      class: \"btn btn-secondary\"\n    }, \"삭제\", 8 /* PROPS */, _hoisted_15)])) : _createCommentVNode(\"v-if\", true)]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createCommentVNode(\" 페이지네이션 컴포넌트 추가 \"), _createVNode(_component_PaginationComponent, {\n    currentPage: $data.currentPage,\n    totalPages: $data.totalPageCount,\n    onPageChange: $options.changePage\n  }, null, 8 /* PROPS */, [\"currentPage\", \"totalPages\", \"onPageChange\"])]);\n}","map":{"version":3,"names":["class","style","_createElementVNode","value","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","type","href","key","_createElementBlock","_hoisted_1","_hoisted_2","_toDisplayString","$props","pageTitle","_hoisted_3","onSubmit","_cache","_withModifiers","args","$options","searchPosts","$event","$data","searchType","_hoisted_8","searchValue","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_Fragment","_renderList","postList","post","postId","id","truncate","title","_hoisted_13","nickname","rank","createdAt","isAdmin","_hoisted_14","onClick","deletePost","_hoisted_15","_createCommentVNode","_createVNode","_component_PaginationComponent","currentPage","totalPages","totalPageCount","onPageChange","changePage"],"sources":["/Users/song/Desktop/springproject/som-front/src/components/PostListComponent.vue"],"sourcesContent":["<template>\n    <div class=\"container\">\n        <div class=\"page-header text-center\" style=\"margin-top: 20px\"><h1>{{pageTitle}}</h1></div>\n        <div class=\"d-flex justify-content-between\" style=\"margin-top:20px;\">\n            <form @submit.prevent=\"searchPosts\" style=\"display: flex; align-items: center;\">\n                <select v-model=\"searchType\" style=\"width: auto; margin-right: 5px;\">\n                    <option value=\"optional\">선택</option>\n                    <option value=\"postid\">게시글 번호</option>\n                    <option value=\"title\">제목</option>\n                    <option value=\"member\">글쓴이</option>\n                </select>\n                <input v-model=\"searchValue\" type=\"text\"/>\n                <button type=\"submit\">검색</button>\n            </form>\n            <a href=\"/postcreate\"><button class=\"btn btn-primary\" type=\"submit\" value=\"작성\">게시글 작성</button></a>\n        </div>\n        <table class=\"table\">\n            <thead>\n                <tr>\n                    <th>게시글 번호</th>\n                    <th>제목</th>\n                    <th>글쓴이(rank)</th>\n                    <th>작성일</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr v-for=\"post in postList\" :key=\"post.postId\">\n                    <td>{{post.id}}</td>\n                    <td>\n                        <a :href=\"`/posts/${post.id}/detail`\">{{ truncate(post.title) }}</a>\n                    </td>\n                    <td>{{post.nickname + '(' + post.rank + ')'}}</td>\n                    <td>{{post.createdAt}}</td>\n                    <td v-if=\"isAdmin\"><button @click=\"deletePost(post.id)\" class=\"btn btn-secondary\">삭제</button></td>\n                </tr>\n            </tbody>\n        </table>\n        <!-- 페이지네이션 컴포넌트 추가 -->\n        <PaginationComponent :currentPage=\"currentPage\" :totalPages=\"totalPageCount\" @page-change=\"changePage\" />\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport PaginationComponent  from '@/components/PaginationComponent.vue'; // 컴포넌트 이름 변경\nexport default {\n  components: {\n    PaginationComponent  // 컴포넌트 이름 변경된 것을 등록합니다.\n  },\n    props: ['isAdmin', 'pageTitle'],\n    data() {\n        return {\n            postList: [],\n            pageSize: 10, //페이지 당 목록 갯수\n            currentPage: 0, //화면 페이지\n            searchType: 'optional', // 기본값 설정\n            searchValue: '',\n            isLastPage: false,\n            isLoading: false,\n            totalPageCount: 0 // 전체 페이지 수\n        };\n    },\n    created(){\n        this.loadPosts();\n    },\n\n    methods: {\n        truncate(value, length = 10) {\n            if (!value) return '';\n            if (value.length <= length) return value;\n            return value.substr(0, length) + '...';\n        },\n\n        searchPosts(){\n            this.postList = [];\n            this.currentPage = 1; // 검색을 하면 페이지를 다시 1페이지로 설정\n            this.loadPosts();\n        },\n\n        async deletePost(postId){\n            if (confirm(\"정말 삭제 하시겠습니까?\")) {\n                const token = localStorage.getItem('token');\n                const headers = token ? { Authorization: `Bearer ${token}` } : {};\n                await axios.delete(`${process.env.VUE_APP_API_BASE_URL}/board/post/${postId}/delete`, { headers });\n                window.location.reload();\n            }\n        },\n\n        async loadPosts(){\n            this.isLoading = true;\n            try{\n            // params 키워드 사용해야 파라미터 방식으로 axios요청 가능\n            const params = {\n                page: this.currentPage,\n                size: this.pageSize,\n                // [this.searchType]: this.searchValue\n            }\n            if(this.searchType === \"postid\"){\n                params.postid = this.searchValue;\n            }else if(this.searchType === \"title\"){\n                params.title = this.searchValue;\n            }\n            const token = localStorage.getItem('token');\n            const headers = token ? { Authorization: `Bearer ${token}` } : {};\n            const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/board/post/list`, {headers, params});\n            this.postList = response.data.data;\n            this.totalPageCount = response.data.totalPage; // 전체 페이지 수 업데이트\n            console.log(this.postList)\n            console.log(response)\n            }catch(error){\n                console.error(\"데이터 불러오기 오류:\", error); // 에러 콘솔에 표시\n            }\n        },\n        changePage(pageNum) {\n        this.currentPage = pageNum;\n        this.loadPosts();\n        }\n    }\n}\n</script>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}