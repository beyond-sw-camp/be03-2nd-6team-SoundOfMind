{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"page-header text-center\",\n  style: {\n    \"margin-top\": \"20px\"\n  }\n}, [/*#__PURE__*/_createElementVNode(\"h1\", null, \"게시글\")], -1 /* HOISTED */);\nconst _hoisted_3 = {\n  class: \"table\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"ID\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"email\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"nickname\")])], -1 /* HOISTED */);\nconst _hoisted_5 = [\"href\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"table\", _hoisted_3, [_hoisted_4, _createElementVNode(\"tbody\", null, [_createElementVNode(\"tr\", null, [_createCommentVNode(\" <tr v-for=\\\"post in postList\\\" :key=\\\"post.id\\\"> \"), _createElementVNode(\"td\", null, _toDisplayString($data.postList.id), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"a\", {\n    href: `/posts/${$data.postList.id}/detail`\n  }, _toDisplayString($options.truncate($data.postList.title)), 9 /* TEXT, PROPS */, _hoisted_5)]), _createElementVNode(\"td\", null, _toDisplayString($data.postList.email), 1 /* TEXT */), _createCommentVNode(\" 이 부분을 수정 \"), _createElementVNode(\"td\", null, _toDisplayString($data.postList.contents), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($data.postList.createdAt), 1 /* TEXT */)])])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","style","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_createCommentVNode","_toDisplayString","$data","postList","id","href","$options","truncate","title","_hoisted_5","email","contents","createdAt"],"sources":["/Users/song/Desktop/springproject/som-front/src/views/MemberDetail.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n      <div class=\"page-header text-center\" style=\"margin-top: 20px\"><h1>게시글</h1></div>\n      <table class=\"table\">\n          <thead>\n              <tr>\n                <th>ID</th>\n                <th>email</th>\n                <th>nickname</th>\n              </tr>\n          </thead>\n          <tbody>\n            <tr>\n            <!-- <tr v-for=\"post in postList\" :key=\"post.id\"> -->\n                <td>{{ postList.id }}</td>\n                <td>\n                    <a :href=\"`/posts/${postList.id}/detail`\">{{ truncate(postList.title) }}</a>\n                </td>\n                <td>{{ postList.email }}</td> <!-- 이 부분을 수정 -->\n                <td>{{ postList.contents }}</td>\n                <td>{{ postList.createdAt }}</td>\n            </tr>\n        </tbody>\n      </table>\n  </div>\n</template>\n\n\n<script>\nimport axios from 'axios';\nexport default {\n    props: ['isAdmin', 'pageTitle', 'id'],\n    data() {\n        return {\n            postList: [],\n            // pageSize: 10, //페이지 당 목록 갯수\n            // currentPage: 0, //화면 페이지\n            searchType: 'optional', // 기본값 설정\n            searchValue: '',\n            isLastPage: false,\n            isLoading: false,\n        };\n    },\n    created(){\n        this.loadPosts(this.id);\n    },\n\n    methods: {\n        truncate(value, length = 10) {\n            if (!value) return '';\n            if (value.length <= length) return value;\n            return value.substr(0, length) + '...';\n        },\n\n        searchItems(){\n            this.postList = [];\n            this.currentPage = 0;\n            this.isLastPage = false;\n            this.loadPosts();\n        },\n\n        async loadPosts(id){\n            this.isLoading = true;\n            try{\n            // params 키워드 사용해야 파라미터 방식으로 axios요청 가능\n            const params = {\n                page: this.currentPage,\n                size: this.pageSize,\n                // [this.searchType]: this.searchValue\n            }\n            if(this.searchType === \"postid\"){\n                params.postid = this.searchValue;\n            }else if(this.searchType === \"title\"){\n                params.title = this.searchValue;\n            }\n            const token = localStorage.getItem('token');\n            const headers = token ? { Authorization: `Bearer ${token}` } : {};\n            const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/board/post/${id}/detail`, {headers, params});\n            this.postList = response.data.data;\n            console.log(this.postList)\n            console.log(\"어금지\")\n            }catch(error){\n                console.error(\"데이터 불러오기 오류:\", error); // 에러 콘솔에 표시\n            }\n        },\n    }\n}\n</script>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAW;gCAClBC,mBAAA,CAAgF;EAA3ED,KAAK,EAAC,yBAAyB;EAACE,KAAwB,EAAxB;IAAA;EAAA;iBAAyBD,mBAAA,CAAY,YAAR,KAAG,E;;EAC9DD,KAAK,EAAC;AAAO;gCAChBC,mBAAA,CAMQ,gB,aALJA,mBAAA,CAIK,a,aAHHA,mBAAA,CAAW,YAAP,IAAE,G,aACNA,mBAAA,CAAc,YAAV,OAAK,G,aACTA,mBAAA,CAAiB,YAAb,UAAQ,E;mBAR5B;;uBACEE,mBAAA,CAuBM,OAvBNC,UAuBM,GAtBFC,UAAgF,EAChFJ,mBAAA,CAoBQ,SApBRK,UAoBQ,GAnBJC,UAMQ,EACRN,mBAAA,CAWM,gBAVJA,mBAAA,CASK,aARLO,mBAAA,sDAAqD,EACjDP,mBAAA,CAA0B,YAAAQ,gBAAA,CAAnBC,KAAA,CAAAC,QAAQ,CAACC,EAAE,kBAClBX,mBAAA,CAEK,aADDA,mBAAA,CAA4E;IAAxEY,IAAI,YAAYH,KAAA,CAAAC,QAAQ,CAACC,EAAE;sBAAcE,QAAA,CAAAC,QAAQ,CAACL,KAAA,CAAAC,QAAQ,CAACK,KAAK,yBAhBxFC,UAAA,E,GAkBgBhB,mBAAA,CAA6B,YAAAQ,gBAAA,CAAtBC,KAAA,CAAAC,QAAQ,CAACO,KAAK,kBAASV,mBAAA,cAAiB,EAC/CP,mBAAA,CAAgC,YAAAQ,gBAAA,CAAzBC,KAAA,CAAAC,QAAQ,CAACQ,QAAQ,kBACxBlB,mBAAA,CAAiC,YAAAQ,gBAAA,CAA1BC,KAAA,CAAAC,QAAQ,CAACS,SAAS,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}