{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport CKEditor from '@ckeditor/ckeditor5-vue';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nexport default {\n  components: {\n    ckeditor: CKEditor.component\n  },\n  data() {\n    return {\n      title: \"\",\n      contents: '<h3>내용을 입력하세요</h3>',\n      editor: ClassicEditor,\n      editorConfig: {\n        toolbar: ['heading', '|', 'bold', 'italic', 'link', 'bulletedList', 'numberedList', 'blockQuote'],\n        heading: {\n          options: [{\n            model: 'paragraph',\n            title: '본문',\n            class: 'ck-heading_paragraph'\n          }, {\n            model: 'heading1',\n            view: 'h1',\n            title: '헤딩 1',\n            class: 'ck-heading_heading1'\n          }, {\n            model: 'heading2',\n            view: 'h2',\n            title: '헤딩 2',\n            class: 'ck-heading_heading2'\n          }, {\n            model: 'heading3',\n            view: 'h3',\n            title: '헤딩 3',\n            class: 'ck-heading_heading3'\n          }, {\n            model: 'heading4',\n            view: 'h4',\n            title: '헤딩 4',\n            class: 'ck-heading_heading4'\n          }, {\n            model: 'heading5',\n            view: 'h5',\n            title: '헤딩 5',\n            class: 'ck-heading_heading5'\n          }, {\n            model: 'heading6',\n            view: 'h6',\n            title: '헤딩 6',\n            class: 'ck-heading_heading6'\n          }]\n        }\n      }\n    };\n  },\n  methods: {\n    async postCreate() {\n      try {\n        const formData = new FormData();\n        formData.append('title', this.title);\n        formData.append('contents', this.contents);\n        const token = localStorage.getItem('token');\n        const headers = token ? {\n          Authorization: `Bearer ${token}`\n        } : {};\n        console.log(formData);\n        await axios.post(`${process.env.VUE_APP_API_BASE_URL}/board/post/create`, formData, {\n          headers\n        });\n        // 성공적으로 작성된 경우 리다이렉트 또는 다른 처리 수행\n        this.$router.push({\n          name: 'PostList'\n        });\n      } catch (error) {\n        // 오류 발생 시 처리\n        console.error(error);\n        alert(\"입력값 확인 필요\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","CKEditor","ClassicEditor","components","ckeditor","component","data","title","contents","editor","editorConfig","toolbar","heading","options","model","class","view","methods","postCreate","formData","FormData","append","token","localStorage","getItem","headers","Authorization","console","log","post","process","env","VUE_APP_API_BASE_URL","$router","push","name","error","alert"],"sources":["/Users/song/Desktop/springproject/som-front/src/views/PostCreate.vue"],"sourcesContent":["<template>\n    <div class=\"container\">\n        <div class=\"page-header text-center\" style=\"margin-top: 20px\"><h1>게시글 작성</h1></div>\n        <form @submit.prevent=\"postCreate\">\n            <div class=\"form-group\">\n                <label>게시글 제목:</label>\n                <input type=\"text\" v-model=\"title\" class=\"form-control\">\n            </div>\n            <div class=\"form-group\">\n                <label>게시글 내용:</label>\n                <ckeditor :editor=\"editor\" v-model=\"contents\" :config=\"editorConfig\"></ckeditor>\n            </div>\n            <div class=\"form-group\">\n                <button type=\"submit\" class=\"btn btn-primary mt-3\">작성완료</button>\n            </div>\n        </form>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport CKEditor from '@ckeditor/ckeditor5-vue';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nexport default {\n    components: {\n    ckeditor: CKEditor.component\n    },\n    data(){\n        return{\n            title:\"\",\n            contents:'<h3>내용을 입력하세요</h3>',\n            editor: ClassicEditor,\n            editorConfig: {\n                    toolbar: [ 'heading', '|', 'bold', 'italic', 'link', 'bulletedList', 'numberedList', 'blockQuote' ],\n                    heading: {\n                        options: [\n                        { model: 'paragraph', title: '본문', class: 'ck-heading_paragraph' },\n                        { model: 'heading1', view: 'h1', title: '헤딩 1', class: 'ck-heading_heading1' },\n                        { model: 'heading2', view: 'h2', title: '헤딩 2', class: 'ck-heading_heading2' },\n                        { model: 'heading3', view: 'h3', title: '헤딩 3', class: 'ck-heading_heading3' },\n                        { model: 'heading4', view: 'h4', title: '헤딩 4', class: 'ck-heading_heading4' },\n                        { model: 'heading5', view: 'h5', title: '헤딩 5', class: 'ck-heading_heading5' },\n                        { model: 'heading6', view: 'h6', title: '헤딩 6', class: 'ck-heading_heading6' }\n                    ]\n                }\n            }\n        }\n    },\n    methods:{\n        async postCreate(){\n            try {\n                const formData = new FormData();\n                formData.append('title', this.title);\n                formData.append('contents', this.contents);\n                \n                const token = localStorage.getItem('token');\n                const headers = token ? { Authorization: `Bearer ${token}` } : {};\n                console.log(formData)\n                await axios.post(`${process.env.VUE_APP_API_BASE_URL}/board/post/create`, formData, { headers });\n                // 성공적으로 작성된 경우 리다이렉트 또는 다른 처리 수행\n                this.$router.push({ name: 'PostList' });\n            } catch (error) {\n                // 오류 발생 시 처리\n                console.error(error);\n                alert(\"입력값 확인 필요\");\n            }\n        }\n    }\n}\n</script>\n\n<style>\n.ck-editor__editable { height: 400px; }\n.ck-content { font-size: 12px; }\n</style>\n"],"mappings":";AAoBA,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,QAAO,MAAO,yBAAyB;AAC9C,OAAOC,aAAY,MAAO,mCAAmC;AAE7D,eAAe;EACXC,UAAU,EAAE;IACZC,QAAQ,EAAEH,QAAQ,CAACI;EACnB,CAAC;EACDC,IAAIA,CAAA,EAAE;IACF,OAAM;MACFC,KAAK,EAAC,EAAE;MACRC,QAAQ,EAAC,oBAAoB;MAC7BC,MAAM,EAAEP,aAAa;MACrBQ,YAAY,EAAE;QACNC,OAAO,EAAE,CAAE,SAAS,EAAE,GAAG,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,cAAc,EAAE,cAAc,EAAE,YAAW,CAAG;QACnGC,OAAO,EAAE;UACLC,OAAO,EAAE,CACT;YAAEC,KAAK,EAAE,WAAW;YAAEP,KAAK,EAAE,IAAI;YAAEQ,KAAK,EAAE;UAAuB,CAAC,EAClE;YAAED,KAAK,EAAE,UAAU;YAAEE,IAAI,EAAE,IAAI;YAAET,KAAK,EAAE,MAAM;YAAEQ,KAAK,EAAE;UAAsB,CAAC,EAC9E;YAAED,KAAK,EAAE,UAAU;YAAEE,IAAI,EAAE,IAAI;YAAET,KAAK,EAAE,MAAM;YAAEQ,KAAK,EAAE;UAAsB,CAAC,EAC9E;YAAED,KAAK,EAAE,UAAU;YAAEE,IAAI,EAAE,IAAI;YAAET,KAAK,EAAE,MAAM;YAAEQ,KAAK,EAAE;UAAsB,CAAC,EAC9E;YAAED,KAAK,EAAE,UAAU;YAAEE,IAAI,EAAE,IAAI;YAAET,KAAK,EAAE,MAAM;YAAEQ,KAAK,EAAE;UAAsB,CAAC,EAC9E;YAAED,KAAK,EAAE,UAAU;YAAEE,IAAI,EAAE,IAAI;YAAET,KAAK,EAAE,MAAM;YAAEQ,KAAK,EAAE;UAAsB,CAAC,EAC9E;YAAED,KAAK,EAAE,UAAU;YAAEE,IAAI,EAAE,IAAI;YAAET,KAAK,EAAE,MAAM;YAAEQ,KAAK,EAAE;UAAsB;QAErF;MACJ;IACJ;EACJ,CAAC;EACDE,OAAO,EAAC;IACJ,MAAMC,UAAUA,CAAA,EAAE;MACd,IAAI;QACA,MAAMC,QAAO,GAAI,IAAIC,QAAQ,CAAC,CAAC;QAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE,IAAI,CAACd,KAAK,CAAC;QACpCY,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAE,IAAI,CAACb,QAAQ,CAAC;QAE1C,MAAMc,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC3C,MAAMC,OAAM,GAAIH,KAAI,GAAI;UAAEI,aAAa,EAAG,UAASJ,KAAM;QAAE,IAAI,CAAC,CAAC;QACjEK,OAAO,CAACC,GAAG,CAACT,QAAQ;QACpB,MAAMnB,KAAK,CAAC6B,IAAI,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,oBAAqB,oBAAmB,EAAEb,QAAQ,EAAE;UAAEM;QAAQ,CAAC,CAAC;QAChG;QACA,IAAI,CAACQ,OAAO,CAACC,IAAI,CAAC;UAAEC,IAAI,EAAE;QAAW,CAAC,CAAC;MAC3C,EAAE,OAAOC,KAAK,EAAE;QACZ;QACAT,OAAO,CAACS,KAAK,CAACA,KAAK,CAAC;QACpBC,KAAK,CAAC,WAAW,CAAC;MACtB;IACJ;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}