{"ast":null,"code":"import { normalizeStyle as _normalizeStyle, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: \"toggle-container\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.toggle && $options.toggle(...args))\n  }, [_createElementVNode(\"div\", {\n    class: \"background\",\n    style: _normalizeStyle({\n      backgroundColor: $options.backgroundColor\n    })\n  }, null, 4 /* STYLE */), _createElementVNode(\"div\", {\n    class: \"circle\",\n    style: _normalizeStyle({\n      left: $options.circlePosition\n    })\n  }, null, 4 /* STYLE */)]);\n}","map":{"version":3,"names":["_createElementBlock","class","onClick","_cache","args","$options","toggle","_createElementVNode","style","_normalizeStyle","backgroundColor","left","circlePosition"],"sources":["/Users/song/Desktop/springproject/som-front/src/views/PostTest.vue"],"sourcesContent":["<template>\n    <div class=\"toggle-container\" @click=\"toggle\">\n      <div class=\"background\" :style=\"{ backgroundColor: backgroundColor}\"></div>\n      <div class=\"circle\" :style=\"{left: circlePosition}\"></div>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    data() {\n      return {\n        isToggled: false\n      };\n    },\n    computed: {\n      circlePosition() {\n        return this.isToggled ? 'calc(100% - 40px)' : '0';\n      },\n      backgroundColor() {\n        return this.isToggled ? 'rgba(0, 0, 139, 1)' : 'rgba(192, 192, 192, 0.5)'; // 오른쪽에 있을 때는 진한 파랑색, 왼쪽에 있을 때는 연한 회색으로 설정\n      }\n    },\n    methods: {\n      toggle() {\n        this.isToggled = !this.isToggled;\n      }\n    }\n  };\n  </script>\n  \n  <style>\n  .toggle-container {\n    width: 80px; /* 너비를 줄입니다. */\n    height: 40px; /* 높이를 줄입니다. */\n    border: 1px solid #ccc;\n    border-radius: 20px; /* 반지름을 조정하여 토글의 둥근 형태를 유지합니다. */\n    position: relative;\n    cursor: pointer;\n    overflow: hidden; /* 내부의 요소가 넘치는 부분은 숨깁니다. */\n  }\n  .background {\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    top: 0;\n    left: 0;\n    transition: background-color 0.3s ease-in-out; /* 배경색 변화에 대한 애니메이션 효과 */\n  }\n  .circle {\n    width: 40px; /* 동그라미의 크기를 줄입니다. */\n    height: 40px; /* 동그라미의 크기를 줄입니다. */\n    border-radius: 50%;\n    background-color: #fff; /* 흰색 배경 */\n    position: absolute;\n    top: 0;\n    left: 0;\n    transition: left 0.3s ease-in-out; /* 위치 변화에 대한 애니메이션 효과 */\n  }\n  </style>\n  "],"mappings":";;uBACIA,mBAAA,CAGM;IAHDC,KAAK,EAAC,kBAAkB;IAAEC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,MAAA,IAAAD,QAAA,CAAAC,MAAA,IAAAF,IAAA,CAAM;MAC1CG,mBAAA,CAA2E;IAAtEN,KAAK,EAAC,YAAY;IAAEO,KAAK,EAFpCC,eAAA;MAAAC,eAAA,EAEyDL,QAAA,CAAAK;IAAe;2BAClEH,mBAAA,CAA0D;IAArDN,KAAK,EAAC,QAAQ;IAAEO,KAAK,EAHhCC,eAAA;MAAAE,IAAA,EAGyCN,QAAA,CAAAO;IAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}