{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      postList: [],\n      postList2: [],\n      postList3: []\n    };\n  },\n  created() {\n    this.loadPosts();\n  },\n  methods: {\n    truncate(value, length = 10) {\n      if (!value) return '';\n      if (value.length <= length) return value;\n      return value.substr(0, length) + '...';\n    },\n    async loadPosts() {\n      this.isLoading = true;\n      try {\n        // params 키워드 사용해야 파라미터 방식으로 axios요청 가능\n        const params = {\n          page: this.currentPage,\n          size: this.pageSize\n          // [this.searchType]: this.searchValue\n        };\n        if (this.searchType === \"rank\") {\n          params.rank = this.searchValue;\n        } else if (this.searchType === \"title\") {\n          params.title = this.searchValue;\n        }\n        const token = localStorage.getItem('token');\n        const headers = token ? {\n          Authorization: `Bearer ${token}`\n        } : {};\n        const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/board/post/today`, {\n          headers,\n          params\n        });\n        const response2 = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/board/post/week`, {\n          headers,\n          params\n        });\n        const response3 = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/board/post/month`, {\n          headers,\n          params\n        });\n        this.postList = response.data.data;\n        this.postList2 = response2.data.data;\n        this.postList3 = response3.data.data;\n        console.log(this.postList);\n        console.log(response);\n      } catch (error) {\n        console.error(\"데이터 불러오기 오류:\", error); // 에러 콘솔에 표시\n      }\n      this.isLoading = false;\n    }\n\n    //     async posts(){\n    //     try{\n    //     const token = localStorage.getItem('token');\n    //     const headers = token ? {Authorization: `Bearer ${token}`} : {};\n    //     // const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/members`, {headers});\n    //     console.log(token)\n    //     axios.post(`http://localhost:8000/board/post/list`,{headers}).then((value)=> {\n    //     console.log(value)\n    //     })\n    //     // this.memberList = response.data;\n    //     }catch(error){\n    //         console.log(error)\n    //     }\n    // },\n  }\n};","map":{"version":3,"names":["axios","data","postList","postList2","postList3","created","loadPosts","methods","truncate","value","length","substr","isLoading","params","page","currentPage","size","pageSize","searchType","rank","searchValue","title","token","localStorage","getItem","headers","Authorization","response","get","process","env","VUE_APP_API_BASE_URL","response2","response3","console","log","error"],"sources":["/Users/song/Desktop/springproject/som-front/src/views/SOMMain.vue"],"sourcesContent":["<!-- 첫 제작 -->\n<template>\n\n    <div class=\"xe-widget-wrapper\" style=\"width: 98.5%;\">\n        <div class=\"page-header text-center\" style=\"margin-top: 20px\">\n            <h1>사용자 랭킹</h1>\n        </div>\n        <ul class=\"widget-list\">\n            <li v-for=\"post in posts\" :key=\"post.id\" class=\"post-item\">\n                <a :href=\"post.url\" class=\"post-link\">\n                    <div class=\"post-content\">\n                        <span class=\"post-title\">{{ post.title }}</span>\n                        <span class=\"post-views\">{{ post.views }}</span>\n                    </div>\n                </a>\n            </li>\n        </ul>\n    </div>\n\n    <div class=\"xe-widget-wrapper\">\n        <div class=\"page-header text-center\" style=\"margin-top: 20px\">\n            <h1>게시글 일간순위</h1>\n        </div>\n        <table class=\"table\">\n            <thead>\n                <tr>\n                    <th>순위</th>\n                    <th>제목</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr v-for=\"post in postList\" :key=\"post.postId\">\n                    <td>{{post.rank}}</td>\n                    <td>\n                        <a :href=\"`/board/post/${post.postId}/detail`\">{{ truncate(post.title) }}</a>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n\n    <div class=\"xe-widget-wrapper\">\n        <div class=\"page-header text-center\" style=\"margin-top: 20px\">\n            <h1>게시글 주간순위</h1>\n        </div>\n        <table class=\"table\">\n            <thead>\n                <tr>\n                    <th>순위</th>\n                    <th>제목</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr v-for=\"post in postList2\" :key=\"post.postId\">\n                    <td>{{post.rank}}</td>\n                    <td>\n                        <a :href=\"`/board/post/${post.postId}/detail`\">{{ truncate(post.title) }}</a>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n\n    <div class=\"xe-widget-wrapper\">\n        <div class=\"page-header text-center\" style=\"margin-top: 20px\">\n            <h1>게시글 월간순위</h1>\n        </div>\n        <table class=\"table\">\n            <thead>\n                <tr>\n                    <th>순위</th>\n                    <th>제목</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr v-for=\"post in postList3\" :key=\"post.postId\">\n                    <td>{{post.rank}}</td>\n                    <td>\n                        <a :href=\"`/board/post/${post.postId}/detail`\">{{ truncate(post.title) }}</a>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n\n\n</template>\n\n<script>\nimport axios from 'axios';\nexport default {\n    data(){\n        return{\n            postList: [],\n            postList2: [],\n            postList3: [],\n        }\n    },\n    created(){\n        this.loadPosts();\n    },\n    \n    methods: {\n        truncate(value, length = 10) {\n            if (!value) return '';\n            if (value.length <= length) return value;\n            return value.substr(0, length) + '...';\n        },\n        async loadPosts(){\n            this.isLoading = true;\n            try{\n            // params 키워드 사용해야 파라미터 방식으로 axios요청 가능\n            const params = {\n                page: this.currentPage,\n                size: this.pageSize,\n                // [this.searchType]: this.searchValue\n            }\n            if(this.searchType === \"rank\"){\n                params.rank = this.searchValue;\n            }else if(this.searchType === \"title\"){\n                params.title = this.searchValue;\n            }\n            const token = localStorage.getItem('token');\n            const headers = token ? { Authorization: `Bearer ${token}` } : {};\n            const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/board/post/today`, {headers, params});\n            const response2 = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/board/post/week`, {headers, params});\n            const response3 = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/board/post/month`, {headers, params});\n            this.postList = response.data.data;\n            this.postList2 = response2.data.data;\n            this.postList3 = response3.data.data;\n            console.log(this.postList)\n            console.log(response)\n            }catch(error){\n                console.error(\"데이터 불러오기 오류:\", error); // 에러 콘솔에 표시\n            }\n            this.isLoading = false;\n        },\n\n        //     async posts(){\n        //     try{\n        //     const token = localStorage.getItem('token');\n        //     const headers = token ? {Authorization: `Bearer ${token}`} : {};\n        //     // const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/members`, {headers});\n        //     console.log(token)\n        //     axios.post(`http://localhost:8000/board/post/list`,{headers}).then((value)=> {\n        //     console.log(value)\n        //     })\n        //     // this.memberList = response.data;\n        //     }catch(error){\n        //         console.log(error)\n        //     }\n        // },\n    },\n\n\n\n}\n</script>\n\n\n\n\n\n<style scoped>\n.xe-widget-wrapper {\n    margin-left: auto; /* 좌측 여백을 우측 여백과 동일하게 설정 */\n    margin-right: auto; /* 우측 여백을 좌측 여백과 동일하게 설정 */\n    float: left;\n    width: 460px;\n    border: 1px solid #ddd;\n    margin: 10px;\n    padding: 10px;\n    background-color: #f9f9f9;\n}\n\n.widget-list {\n    list-style: none;\n    padding: 0;\n}\n\n.post-item {\n    margin-bottom: 10px;\n}\n\n.post-link {\n    text-decoration: none;\n    color: #333;\n    display: block;\n    transition: background-color 0.3s;\n}\n\n.post-link:hover {\n    background-color: #f0f0f0;\n}\n\n.post-content {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.post-title {\n    flex-grow: 1;\n    font-size: 16px;\n}\n\n.post-views {\n    font-size: 14px;\n    color: #666;\n}\n</style>\n"],"mappings":"AAyFA,OAAOA,KAAI,MAAO,OAAO;AACzB,eAAe;EACXC,IAAIA,CAAA,EAAE;IACF,OAAM;MACFC,QAAQ,EAAE,EAAE;MACZC,SAAS,EAAE,EAAE;MACbC,SAAS,EAAE;IACf;EACJ,CAAC;EACDC,OAAOA,CAAA,EAAE;IACL,IAAI,CAACC,SAAS,CAAC,CAAC;EACpB,CAAC;EAEDC,OAAO,EAAE;IACLC,QAAQA,CAACC,KAAK,EAAEC,MAAK,GAAI,EAAE,EAAE;MACzB,IAAI,CAACD,KAAK,EAAE,OAAO,EAAE;MACrB,IAAIA,KAAK,CAACC,MAAK,IAAKA,MAAM,EAAE,OAAOD,KAAK;MACxC,OAAOA,KAAK,CAACE,MAAM,CAAC,CAAC,EAAED,MAAM,IAAI,KAAK;IAC1C,CAAC;IACD,MAAMJ,SAASA,CAAA,EAAE;MACb,IAAI,CAACM,SAAQ,GAAI,IAAI;MACrB,IAAG;QACH;QACA,MAAMC,MAAK,GAAI;UACXC,IAAI,EAAE,IAAI,CAACC,WAAW;UACtBC,IAAI,EAAE,IAAI,CAACC;UACX;QACJ;QACA,IAAG,IAAI,CAACC,UAAS,KAAM,MAAM,EAAC;UAC1BL,MAAM,CAACM,IAAG,GAAI,IAAI,CAACC,WAAW;QAClC,CAAC,MAAK,IAAG,IAAI,CAACF,UAAS,KAAM,OAAO,EAAC;UACjCL,MAAM,CAACQ,KAAI,GAAI,IAAI,CAACD,WAAW;QACnC;QACA,MAAME,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC3C,MAAMC,OAAM,GAAIH,KAAI,GAAI;UAAEI,aAAa,EAAG,UAASJ,KAAM;QAAE,IAAI,CAAC,CAAC;QACjE,MAAMK,QAAO,GAAI,MAAM3B,KAAK,CAAC4B,GAAG,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,oBAAqB,mBAAkB,EAAE;UAACN,OAAO;UAAEZ;QAAM,CAAC,CAAC;QAC3G,MAAMmB,SAAQ,GAAI,MAAMhC,KAAK,CAAC4B,GAAG,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,oBAAqB,kBAAiB,EAAE;UAACN,OAAO;UAAEZ;QAAM,CAAC,CAAC;QAC3G,MAAMoB,SAAQ,GAAI,MAAMjC,KAAK,CAAC4B,GAAG,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,oBAAqB,mBAAkB,EAAE;UAACN,OAAO;UAAEZ;QAAM,CAAC,CAAC;QAC5G,IAAI,CAACX,QAAO,GAAIyB,QAAQ,CAAC1B,IAAI,CAACA,IAAI;QAClC,IAAI,CAACE,SAAQ,GAAI6B,SAAS,CAAC/B,IAAI,CAACA,IAAI;QACpC,IAAI,CAACG,SAAQ,GAAI6B,SAAS,CAAChC,IAAI,CAACA,IAAI;QACpCiC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACjC,QAAQ;QACzBgC,OAAO,CAACC,GAAG,CAACR,QAAQ;MACpB,CAAC,QAAMS,KAAK,EAAC;QACTF,OAAO,CAACE,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC,EAAE;MAC1C;MACA,IAAI,CAACxB,SAAQ,GAAI,KAAK;IAC1B;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACJ;AAIJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}