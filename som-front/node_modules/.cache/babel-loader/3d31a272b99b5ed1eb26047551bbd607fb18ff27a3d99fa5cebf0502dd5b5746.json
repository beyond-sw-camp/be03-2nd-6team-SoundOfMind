{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"page-header text-center\",\n  style: {\n    \"margin-top\": \"20px\"\n  }\n}, [/*#__PURE__*/_createElementVNode(\"h1\", null, \"게시글\")], -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"a\", {\n  href: \"\"\n}, [/*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"btn btn-primary\",\n  type: \"submit\",\n  value: \"작성\"\n}, \"게시글 수정\")], -1 /* HOISTED */);\nconst _hoisted_4 = {\n  class: \"form-group\"\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"label\", null, \"게시글 제목:\", -1 /* HOISTED */);\nconst _hoisted_6 = {\n  class: \"form-group\"\n};\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"label\", null, \"게시글 내용:\", -1 /* HOISTED */);\nconst _hoisted_8 = [\"innerHTML\"];\nconst _hoisted_9 = {\n  class: \"container\"\n};\nconst _hoisted_10 = {\n  class: \"form-group\"\n};\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"label\", null, \"댓글 작성\", -1 /* HOISTED */);\nconst _hoisted_12 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"form\", {\n    onSubmit: _cache[1] || (_cache[1] = _withModifiers((...args) => _ctx.postCreate && _ctx.postCreate(...args), [\"prevent\"]))\n  }, [_hoisted_3, _createElementVNode(\"div\", _hoisted_4, [_hoisted_5, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.title = $event),\n    class: \"form-control\",\n    readonly: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.title]])]), _createElementVNode(\"div\", _hoisted_6, [_hoisted_7, _createElementVNode(\"div\", {\n    innerHTML: $data.contents\n  }, null, 8 /* PROPS */, _hoisted_8), _createCommentVNode(\" <ckeditor :editor=\\\"editor\\\" v-model=\\\"contents\\\" :config=\\\"editorConfig\\\"></ckeditor> \")]), _createCommentVNode(\" <div class=\\\"form-group\\\">\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-3\\\">작성완료</button>\\n                </div> \")], 32 /* NEED_HYDRATION */)]), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"form\", {\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => $options.commentCreate && $options.commentCreate(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_10, [_hoisted_11, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.comment = $event),\n    class: \"form-control\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.comment]]), _createElementVNode(\"button\", {\n    type: \"submit\",\n    class: \"btn btn-primary\",\n    disabled: !$data.comment.trim()\n  }, \"등록\", 8 /* PROPS */, _hoisted_12)])], 32 /* NEED_HYDRATION */)])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementVNode","style","href","type","value","_createElementBlock","_Fragment","_hoisted_1","_hoisted_2","onSubmit","_cache","_withModifiers","args","_ctx","postCreate","_hoisted_3","_hoisted_4","_hoisted_5","$event","$data","title","readonly","_hoisted_6","_hoisted_7","innerHTML","contents","_hoisted_8","_createCommentVNode","_hoisted_9","$options","commentCreate","_hoisted_10","_hoisted_11","comment","disabled","trim","_hoisted_12"],"sources":["/Users/song/Desktop/springproject/som-front/src/views/PostDetail.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n      <div class=\"page-header text-center\" style=\"margin-top: 20px\"><h1>게시글</h1></div>\n            <form @submit.prevent=\"postCreate\">\n                <a href=\"\"><button class=\"btn btn-primary\" type=\"submit\" value=\"작성\">게시글 수정</button></a>\n                <div class=\"form-group\">\n                    <label>게시글 제목:</label>\n                    <input type=\"text\" v-model=\"title\" class=\"form-control\" readonly>\n                </div>\n                <div class=\"form-group\">\n                    <label>게시글 내용:</label>\n                    <div v-html=\"contents\"></div>\n                    <!-- <ckeditor :editor=\"editor\" v-model=\"contents\" :config=\"editorConfig\"></ckeditor> -->\n                </div>\n                <!-- <div class=\"form-group\">\n                    <button type=\"submit\" class=\"btn btn-primary mt-3\">작성완료</button>\n                </div> -->\n            </form>\n        </div>\n    <div class=\"container\">\n        <form @submit.prevent=\"commentCreate\">\n            <div class=\"form-group\">\n                <label>댓글 작성</label>\n                <input type=\"text\" v-model=\"comment\" class=\"form-control\">\n                <button type=\"submit\" class=\"btn btn-primary\" :disabled=\"!comment.trim()\">등록</button>\n                \n            </div>\n        </form>\n    </div>\n</template>\n\n\n<script>\nimport axios from 'axios';\n// import CKEditor from '@ckeditor/ckeditor5-vue';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nexport default {\n    components: {\n    // ckeditor: CKEditor.component\n    },\n    props: ['isAdmin', 'pageTitle', 'id'],\n    data() {\n        return {\n            postList: [],\n            // pageSize: 10, //페이지 당 목록 갯수\n            // currentPage: 0, //화면 페이지\n            searchType: 'optional', // 기본값 설정\n            searchValue: '',\n            title: this.title,\n            contents: this.contents,\n            comment : '',\n            isLastPage: false,\n            isLoading: false,\n            editor: ClassicEditor,\n            editorData: '<p>내용을 입력하세요</p>',\n            editorConfig: {\n                    toolbar: [ 'heading', '|', 'bold', 'italic', 'link', 'bulletedList', 'numberedList', 'blockQuote' ],\n                    heading: {\n                        options: [\n                        { model: 'paragraph', title: '본문', class: 'ck-heading_paragraph' },\n                        { model: 'heading1', view: 'h1', title: '헤딩 1', class: 'ck-heading_heading1' },\n                        { model: 'heading2', view: 'h2', title: '헤딩 2', class: 'ck-heading_heading2' },\n                        { model: 'heading3', view: 'h3', title: '헤딩 3', class: 'ck-heading_heading3' },\n                        { model: 'heading4', view: 'h4', title: '헤딩 4', class: 'ck-heading_heading4' },\n                        { model: 'heading5', view: 'h5', title: '헤딩 5', class: 'ck-heading_heading5' },\n                        { model: 'heading6', view: 'h6', title: '헤딩 6', class: 'ck-heading_heading6' }\n                    ]\n                }\n            }\n        };\n    },\n    created(){\n        this.loadPosts(this.id);\n        this.commentCreate(this.id);\n    },\n\n    methods: {\n        truncate(value, length = 10) {\n            if (!value) return '';\n            if (value.length <= length) return value;\n            return value.substr(0, length) + '...';\n        },\n\n        searchItems(){\n            this.postList = [];\n            this.currentPage = 0;\n            this.isLastPage = false;\n            this.loadPosts();\n        },\n\n        async loadPosts(id){\n            this.isLoading = true;\n            try{\n            // params 키워드 사용해야 파라미터 방식으로 axios요청 가능\n            const params = {\n                page: this.currentPage,\n                size: this.pageSize,\n                // [this.searchType]: this.searchValue\n            }\n            if(this.searchType === \"postid\"){\n                params.postid = this.searchValue;\n            }else if(this.searchType === \"title\"){\n                params.title = this.searchValue;\n            }\n            const token = localStorage.getItem('token');\n            const headers = token ? { Authorization: `Bearer ${token}` } : {};\n            const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/board/post/${id}/detail`, {headers, params});\n            this.postList = response.data.data;\n            this.title = this.postList.title,\n            this.contents = this.postList.contents;\n            console.log(this.postList)\n            }catch(error){\n                console.error(\"데이터 불러오기 오류:\", error); // 에러 콘솔에 표시\n            }\n        },\n        async commentCreate(id){\n            try {\n                const formData = new FormData();\n                formData.append('comment', this.comment);\n\n                const token = localStorage.getItem('token');\n                const headers = token ? { Authorization: `Bearer ${token}` } : {};\n                console.log(formData)\n                await axios.post(`${process.env.VUE_APP_API_BASE_URL}/board/${id}/comment`, {headers,formData});\n                // 성공적으로 작성된 경우 리다이렉트 또는 다른 처리 수행\n                this.$router.push({ name: 'SOMMain' });\n            } catch (error) {\n                // 오류 발생 시 처리\n                console.error(error);\n                alert(\"입력값 확인 필요\");\n            }\n        }\n    }\n}\n</script>\n<style>\n.ck-editor__editable { height: 400px; }\n.ck-content { font-size: 12px; }\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAW;gCAClBC,mBAAA,CAAgF;EAA3ED,KAAK,EAAC,yBAAyB;EAACE,KAAwB,EAAxB;IAAA;EAAA;iBAAyBD,mBAAA,CAAY,YAAR,KAAG,E;gCAE3DA,mBAAA,CAAuF;EAApFE,IAAI,EAAC;AAAE,I,aAACF,mBAAA,CAAwE;EAAhED,KAAK,EAAC,iBAAiB;EAACI,IAAI,EAAC,QAAQ;EAACC,KAAK,EAAC;GAAK,QAAM,E;;EACrEL,KAAK,EAAC;AAAY;gCACnBC,mBAAA,CAAsB,eAAf,SAAO;;EAGbD,KAAK,EAAC;AAAY;gCACnBC,mBAAA,CAAsB,eAAf,SAAO;mBAVlC;;EAmBSD,KAAK,EAAC;AAAW;;EAETA,KAAK,EAAC;AAAY;iCACnBC,mBAAA,CAAoB,eAAb,OAAK;oBAtB5B;;uBAAAK,mBAAA,CAAAC,SAAA,SACEN,mBAAA,CAiBY,OAjBZO,UAiBY,GAhBRC,UAAgF,EAC1ER,mBAAA,CAcO;IAdAS,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAHzBC,cAAA,KAAAC,IAAA,KAGmCC,IAAA,CAAAC,UAAA,IAAAD,IAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;MAC7BG,UAAuF,EACvFf,mBAAA,CAGM,OAHNgB,UAGM,GAFFC,UAAsB,E,gBACtBjB,mBAAA,CAAiE;IAA1DG,IAAI,EAAC,MAAM;IAPtC,uBAAAO,MAAA,QAAAA,MAAA,MAAAQ,MAAA,IAOgDC,KAAA,CAAAC,KAAK,GAAAF,MAAA;IAAEnB,KAAK,EAAC,cAAc;IAACsB,QAAQ,EAAR;iDAA5BF,KAAA,CAAAC,KAAK,E,KAErCpB,mBAAA,CAIM,OAJNsB,UAIM,GAHFC,UAAsB,EACtBvB,mBAAA,CAA6B;IAAxBwB,SAAiB,EAATL,KAAA,CAAAM;EAAQ,wBAXzCC,UAAA,GAYoBC,mBAAA,4FAAyF,C,GAE7FA,mBAAA,kJAEU,C,8BAGtB3B,mBAAA,CASM,OATN4B,UASM,GARF5B,mBAAA,CAOO;IAPAS,QAAM,EAAAC,MAAA,QAAAA,MAAA,MApBrBC,cAAA,KAAAC,IAAA,KAoB+BiB,QAAA,CAAAC,aAAA,IAAAD,QAAA,CAAAC,aAAA,IAAAlB,IAAA,CAAa;MAChCZ,mBAAA,CAKM,OALN+B,WAKM,GAJFC,WAAoB,E,gBACpBhC,mBAAA,CAA0D;IAAnDG,IAAI,EAAC,MAAM;IAvBlC,uBAAAO,MAAA,QAAAA,MAAA,MAAAQ,MAAA,IAuB4CC,KAAA,CAAAc,OAAO,GAAAf,MAAA;IAAEnB,KAAK,EAAC;iDAAfoB,KAAA,CAAAc,OAAO,E,GACnCjC,mBAAA,CAAqF;IAA7EG,IAAI,EAAC,QAAQ;IAACJ,KAAK,EAAC,iBAAiB;IAAEmC,QAAQ,GAAGf,KAAA,CAAAc,OAAO,CAACE,IAAI;KAAI,IAAE,iBAxB5FC,WAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}