{"ast":null,"code":"import { createApp } from 'vue';\nimport App from './App.vue';\nimport './index.css';\nimport router from '@/router/index.js';\nimport '@/assets/css/bootstrap.min.css'; // bootstrap import\nimport axios from 'axios';\nconst app = createApp(App);\n\n// 401응답의 경우 interceptor를 통해 공통적으로 토큰 제거 후 로그 관리\naxios.interceptors.response.use(response => response, error => {\n  if (error.response && error.response.status === 401) {\n    localStorage.clear();\n    window.location.href = \"/login\";\n  }\n  return Promise.reject(error);\n});\napp.use(router);\napp.mount('#app');","map":{"version":3,"names":["createApp","App","router","axios","app","interceptors","response","use","error","status","localStorage","clear","window","location","href","Promise","reject","mount"],"sources":["/Users/song/Desktop/springproject/som-front/src/main.js"],"sourcesContent":["import { createApp } from 'vue';\nimport App from './App.vue';\nimport './index.css';\nimport router from '@/router/index.js'\nimport '@/assets/css/bootstrap.min.css' // bootstrap import\nimport axios from 'axios';\n\nconst app = createApp(App);\n\n// 401응답의 경우 interceptor를 통해 공통적으로 토큰 제거 후 로그 관리\naxios.interceptors.response.use(response => response, error =>{\n    if(error.response && error.response.status === 401){\n        localStorage.clear();\n        window.location.href = \"/login\";\n    }\n    return Promise.reject(error)\n})\n\napp.use(router);\napp.mount('#app');"],"mappings":"AAAA,SAASA,SAAS,QAAQ,KAAK;AAC/B,OAAOC,GAAG,MAAM,WAAW;AAC3B,OAAO,aAAa;AACpB,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAO,gCAAgC,EAAC;AACxC,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGJ,SAAS,CAACC,GAAG,CAAC;;AAE1B;AACAE,KAAK,CAACE,YAAY,CAACC,QAAQ,CAACC,GAAG,CAACD,QAAQ,IAAIA,QAAQ,EAAEE,KAAK,IAAG;EAC1D,IAAGA,KAAK,CAACF,QAAQ,IAAIE,KAAK,CAACF,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAC;IAC/CC,YAAY,CAACC,KAAK,CAAC,CAAC;IACpBC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;EACnC;EACA,OAAOC,OAAO,CAACC,MAAM,CAACR,KAAK,CAAC;AAChC,CAAC,CAAC;AAEFJ,GAAG,CAACG,GAAG,CAACL,MAAM,CAAC;AACfE,GAAG,CAACa,KAAK,CAAC,MAAM,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}