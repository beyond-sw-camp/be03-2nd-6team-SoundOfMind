{"ast":null,"code":"import axios from 'axios';\nexport default {\n  props: ['isAdmin', 'pageTitle', 'id'],\n  data() {\n    return {\n      postList: [],\n      // pageSize: 10, //페이지 당 목록 갯수\n      // currentPage: 0, //화면 페이지\n      searchType: 'optional',\n      // 기본값 설정\n      searchValue: '',\n      isLastPage: false,\n      isLoading: false\n    };\n  },\n  created() {\n    this.loadPosts(this.id);\n  },\n  methods: {\n    truncate(value, length = 10) {\n      if (!value) return '';\n      if (value.length <= length) return value;\n      return value.substr(0, length) + '...';\n    },\n    searchItems() {\n      this.postList = [];\n      this.currentPage = 0;\n      this.isLastPage = false;\n      this.loadPosts();\n    },\n    async loadPosts(id) {\n      this.isLoading = true;\n      try {\n        // params 키워드 사용해야 파라미터 방식으로 axios요청 가능\n        const params = {\n          page: this.currentPage,\n          size: this.pageSize\n          // [this.searchType]: this.searchValue\n        };\n        if (this.searchType === \"postid\") {\n          params.postid = this.searchValue;\n        } else if (this.searchType === \"title\") {\n          params.title = this.searchValue;\n        }\n        const token = localStorage.getItem('token');\n        const headers = token ? {\n          Authorization: `Bearer ${token}`\n        } : {};\n        const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/board/post/${id}/detail`, {\n          headers,\n          params\n        });\n        this.postList = response.data.data;\n        console.log(this.postList);\n        console.log(\"어금지\");\n      } catch (error) {\n        console.error(\"데이터 불러오기 오류:\", error); // 에러 콘솔에 표시\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","props","data","postList","searchType","searchValue","isLastPage","isLoading","created","loadPosts","id","methods","truncate","value","length","substr","searchItems","currentPage","params","page","size","pageSize","postid","title","token","localStorage","getItem","headers","Authorization","response","get","process","env","VUE_APP_API_BASE_URL","console","log","error"],"sources":["/Users/song/Desktop/springproject/som-front/src/views/MemberDetail.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n      <div class=\"page-header text-center\" style=\"margin-top: 20px\"><h1>게시글</h1></div>\n      <table class=\"table\">\n          <thead>\n              <tr>\n                <th>ID</th>\n                <th>email</th>\n                <th>nickname</th>\n              </tr>\n          </thead>\n          <tbody>\n            <tr>\n            <!-- <tr v-for=\"post in postList\" :key=\"post.id\"> -->\n                <td>{{ postList.id }}</td>\n                <td>\n                    <a :href=\"`/posts/${postList.id}/detail`\">{{ truncate(postList.title) }}</a>\n                </td>\n                <td>{{ postList.email }}</td> <!-- 이 부분을 수정 -->\n                <td>{{ postList.contents }}</td>\n                <td>{{ postList.createdAt }}</td>\n            </tr>\n        </tbody>\n      </table>\n  </div>\n</template>\n\n\n<script>\nimport axios from 'axios';\nexport default {\n    props: ['isAdmin', 'pageTitle', 'id'],\n    data() {\n        return {\n            postList: [],\n            // pageSize: 10, //페이지 당 목록 갯수\n            // currentPage: 0, //화면 페이지\n            searchType: 'optional', // 기본값 설정\n            searchValue: '',\n            isLastPage: false,\n            isLoading: false,\n        };\n    },\n    created(){\n        this.loadPosts(this.id);\n    },\n\n    methods: {\n        truncate(value, length = 10) {\n            if (!value) return '';\n            if (value.length <= length) return value;\n            return value.substr(0, length) + '...';\n        },\n\n        searchItems(){\n            this.postList = [];\n            this.currentPage = 0;\n            this.isLastPage = false;\n            this.loadPosts();\n        },\n\n        async loadPosts(id){\n            this.isLoading = true;\n            try{\n            // params 키워드 사용해야 파라미터 방식으로 axios요청 가능\n            const params = {\n                page: this.currentPage,\n                size: this.pageSize,\n                // [this.searchType]: this.searchValue\n            }\n            if(this.searchType === \"postid\"){\n                params.postid = this.searchValue;\n            }else if(this.searchType === \"title\"){\n                params.title = this.searchValue;\n            }\n            const token = localStorage.getItem('token');\n            const headers = token ? { Authorization: `Bearer ${token}` } : {};\n            const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/board/post/${id}/detail`, {headers, params});\n            this.postList = response.data.data;\n            console.log(this.postList)\n            console.log(\"어금지\")\n            }catch(error){\n                console.error(\"데이터 불러오기 오류:\", error); // 에러 콘솔에 표시\n            }\n        },\n    }\n}\n</script>\n"],"mappings":"AA6BA,OAAOA,KAAI,MAAO,OAAO;AACzB,eAAe;EACXC,KAAK,EAAE,CAAC,SAAS,EAAE,WAAW,EAAE,IAAI,CAAC;EACrCC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,QAAQ,EAAE,EAAE;MACZ;MACA;MACAC,UAAU,EAAE,UAAU;MAAE;MACxBC,WAAW,EAAE,EAAE;MACfC,UAAU,EAAE,KAAK;MACjBC,SAAS,EAAE;IACf,CAAC;EACL,CAAC;EACDC,OAAOA,CAAA,EAAE;IACL,IAAI,CAACC,SAAS,CAAC,IAAI,CAACC,EAAE,CAAC;EAC3B,CAAC;EAEDC,OAAO,EAAE;IACLC,QAAQA,CAACC,KAAK,EAAEC,MAAK,GAAI,EAAE,EAAE;MACzB,IAAI,CAACD,KAAK,EAAE,OAAO,EAAE;MACrB,IAAIA,KAAK,CAACC,MAAK,IAAKA,MAAM,EAAE,OAAOD,KAAK;MACxC,OAAOA,KAAK,CAACE,MAAM,CAAC,CAAC,EAAED,MAAM,IAAI,KAAK;IAC1C,CAAC;IAEDE,WAAWA,CAAA,EAAE;MACT,IAAI,CAACb,QAAO,GAAI,EAAE;MAClB,IAAI,CAACc,WAAU,GAAI,CAAC;MACpB,IAAI,CAACX,UAAS,GAAI,KAAK;MACvB,IAAI,CAACG,SAAS,CAAC,CAAC;IACpB,CAAC;IAED,MAAMA,SAASA,CAACC,EAAE,EAAC;MACf,IAAI,CAACH,SAAQ,GAAI,IAAI;MACrB,IAAG;QACH;QACA,MAAMW,MAAK,GAAI;UACXC,IAAI,EAAE,IAAI,CAACF,WAAW;UACtBG,IAAI,EAAE,IAAI,CAACC;UACX;QACJ;QACA,IAAG,IAAI,CAACjB,UAAS,KAAM,QAAQ,EAAC;UAC5Bc,MAAM,CAACI,MAAK,GAAI,IAAI,CAACjB,WAAW;QACpC,CAAC,MAAK,IAAG,IAAI,CAACD,UAAS,KAAM,OAAO,EAAC;UACjCc,MAAM,CAACK,KAAI,GAAI,IAAI,CAAClB,WAAW;QACnC;QACA,MAAMmB,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC3C,MAAMC,OAAM,GAAIH,KAAI,GAAI;UAAEI,aAAa,EAAG,UAASJ,KAAM;QAAE,IAAI,CAAC,CAAC;QACjE,MAAMK,QAAO,GAAI,MAAM7B,KAAK,CAAC8B,GAAG,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,oBAAqB,eAAcvB,EAAG,SAAQ,EAAE;UAACiB,OAAO;UAAET;QAAM,CAAC,CAAC;QAClH,IAAI,CAACf,QAAO,GAAI0B,QAAQ,CAAC3B,IAAI,CAACA,IAAI;QAClCgC,OAAO,CAACC,GAAG,CAAC,IAAI,CAAChC,QAAQ;QACzB+B,OAAO,CAACC,GAAG,CAAC,KAAK;MACjB,CAAC,QAAMC,KAAK,EAAC;QACTF,OAAO,CAACE,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC,EAAE;MAC1C;IACJ;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}