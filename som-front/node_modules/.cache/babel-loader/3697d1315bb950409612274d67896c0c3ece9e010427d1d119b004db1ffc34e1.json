{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-b866336a\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"page-header text-center\",\n  style: {\n    \"margin-top\": \"20px\"\n  }\n}, [/*#__PURE__*/_createElementVNode(\"h1\", null, \"게시글\")], -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"post-title-container d-flex justify-content-between align-items-center\"\n};\nconst _hoisted_4 = {\n  key: 0\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", null, \"게시글 제목:\", -1 /* HOISTED */));\nconst _hoisted_6 = [\"innerHTML\"];\nconst _hoisted_7 = {\n  key: 1\n};\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", null, \"게시글 제목:\", -1 /* HOISTED */));\nconst _hoisted_9 = {\n  class: \"post-content-container\"\n};\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", null, \"게시글 내용:\", -1 /* HOISTED */));\nconst _hoisted_11 = {\n  key: 0\n};\nconst _hoisted_12 = [\"innerHTML\"];\nconst _hoisted_13 = {\n  key: 1\n};\nconst _hoisted_14 = {\n  class: \"comment-section\"\n};\nconst _hoisted_15 = {\n  class: \"form-container\"\n};\nconst _hoisted_16 = {\n  class: \"col\"\n};\nconst _hoisted_17 = {\n  class: \"form-group mb-0\"\n};\nconst _hoisted_18 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", null, \"댓글 작성\", -1 /* HOISTED */));\nconst _hoisted_19 = {\n  class: \"col-auto\"\n};\nconst _hoisted_20 = [\"disabled\"];\nconst _hoisted_21 = {\n  class: \"comment-list-container\"\n};\nconst _hoisted_22 = {\n  class: \"email-box\"\n};\nconst _hoisted_23 = {\n  key: 0\n};\nconst _hoisted_24 = {\n  key: 1\n};\nconst _hoisted_25 = {\n  class: \"comment-text-box\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createCommentVNode(\" 게시글 제목 \"), _createElementVNode(\"div\", _hoisted_3, [!$data.isEditing ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_hoisted_5, _createElementVNode(\"div\", {\n    class: \"post-title\",\n    innerHTML: $data.title\n  }, null, 8 /* PROPS */, _hoisted_6)])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_hoisted_8, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"form-control\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.editedTitle = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.editedTitle]])])), _createElementVNode(\"div\", null, [_createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"btn btn-outline-secondary\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.toggleEditMode && $options.toggleEditMode(...args))\n  }, \"수정\")])]), _createCommentVNode(\" 게시글 내용 \"), _createElementVNode(\"div\", _hoisted_9, [_hoisted_10, !$data.isEditing ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, [_createElementVNode(\"div\", {\n    class: \"post-contents\",\n    innerHTML: $data.contents\n  }, null, 8 /* PROPS */, _hoisted_12)])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_13, [_withDirectives(_createElementVNode(\"textarea\", {\n    class: \"form-control\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.editedContent = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.editedContent]])]))]), _createCommentVNode(\" 댓글 작성 폼과 댓글 목록 \"), _createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"div\", _hoisted_15, [_createElementVNode(\"form\", {\n    onSubmit: _cache[4] || (_cache[4] = _withModifiers((...args) => $options.commentCreate && $options.commentCreate(...args), [\"prevent\"])),\n    class: \"form-row align-items-end\"\n  }, [_createElementVNode(\"div\", _hoisted_16, [_createElementVNode(\"div\", _hoisted_17, [_hoisted_18, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.comment = $event),\n    class: \"form-control custom-input\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.comment]])])]), _createElementVNode(\"div\", _hoisted_19, [_createElementVNode(\"button\", {\n    type: \"submit\",\n    class: \"btn btn-outline-secondary\",\n    disabled: !$data.comment.trim()\n  }, \"등록\", 8 /* PROPS */, _hoisted_20)])], 32 /* NEED_HYDRATION */)]), _createElementVNode(\"div\", _hoisted_21, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.commentList, comment => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: comment.id,\n      class: \"comment-box\"\n    }, [_createElementVNode(\"div\", _hoisted_22, [_ctx.userRole !== 'ADMIN' ? (_openBlock(), _createElementBlock(\"p\", _hoisted_23, \"익명\")) : _createCommentVNode(\"v-if\", true), _ctx.userRole === 'ADMIN' ? (_openBlock(), _createElementBlock(\"p\", _hoisted_24, _toDisplayString(comment.nickname), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_25, [_createElementVNode(\"p\", null, _toDisplayString(comment.comment), 1 /* TEXT */)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","style","key","_createElementBlock","_hoisted_1","_hoisted_2","_createCommentVNode","_hoisted_3","$data","isEditing","_hoisted_4","_hoisted_5","innerHTML","title","_hoisted_6","_hoisted_7","_hoisted_8","type","_cache","$event","editedTitle","onClick","args","$options","toggleEditMode","_hoisted_9","_hoisted_10","_hoisted_11","contents","_hoisted_12","_hoisted_13","editedContent","_hoisted_14","_hoisted_15","onSubmit","_withModifiers","commentCreate","_hoisted_16","_hoisted_17","_hoisted_18","comment","_hoisted_19","disabled","trim","_hoisted_20","_hoisted_21","_Fragment","_renderList","commentList","id","_hoisted_22","_ctx","userRole","_hoisted_23","_hoisted_24","_toDisplayString","nickname","_hoisted_25"],"sources":["/Users/song/Desktop/springproject/som-front/src/views/PostDetail.vue"],"sourcesContent":["<template>\n    <div class=\"container\">\n      <div class=\"page-header text-center\" style=\"margin-top: 20px\">\n        <h1>게시글</h1>\n      </div>\n      <!-- 게시글 제목 -->\n      <div class=\"post-title-container d-flex justify-content-between align-items-center\">\n        <div v-if=\"!isEditing\">\n          <label>게시글 제목:</label>\n          <div class=\"post-title\" v-html=\"title\"></div>\n        </div>\n        <div v-else>\n          <label>게시글 제목:</label>\n          <input type=\"text\" class=\"form-control\" v-model=\"editedTitle\">\n        </div>\n        <div>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" @click=\"toggleEditMode\">수정</button>\n        </div>\n      </div>\n      <!-- 게시글 내용 -->\n      <div class=\"post-content-container\">\n        <label>게시글 내용:</label>\n        <div v-if=\"!isEditing\">\n          <div class=\"post-contents\" v-html=\"contents\"></div>\n        </div>\n        <div v-else>\n          <textarea class=\"form-control\" v-model=\"editedContent\"></textarea>\n        </div>\n      </div>\n      <!-- 댓글 작성 폼과 댓글 목록 -->\n      <div class=\"comment-section\">\n        <div class=\"form-container\">\n          <form @submit.prevent=\"commentCreate\" class=\"form-row align-items-end\">\n            <div class=\"col\">\n              <div class=\"form-group mb-0\">\n                <label>댓글 작성</label>\n                <input type=\"text\" v-model=\"comment\" class=\"form-control custom-input\">\n              </div>\n            </div>\n            <div class=\"col-auto\">\n              <button type=\"submit\" class=\"btn btn-outline-secondary\" :disabled=\"!comment.trim()\">등록</button>\n            </div>\n          </form>\n        </div>\n        <div class=\"comment-list-container\">\n          <div v-for=\"comment in commentList\" :key=\"comment.id\" class=\"comment-box\">\n            <div class=\"email-box\">\n              <p v-if=\"userRole !== 'ADMIN'\">익명</p>\n              <p v-if=\"userRole === 'ADMIN'\">{{ comment.nickname }}</p>\n            </div>\n            <div class=\"comment-text-box\">\n              <p>{{ comment.comment }}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </template>\n  <script>\n  import axios from 'axios';\n  import ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n  export default {\n    props: ['isAdmin', 'pageTitle', 'id'],\n    data() {\n      return {\n        postList: [],\n        commentList: [],\n        title: '',\n        contents: '',\n        comment: '',\n        isLoading: false,\n        editor: ClassicEditor,\n        isEditing: false,\n        editedTitle: '',\n        editedContent: ''\n      };\n    },\n    created() {\n      this.loadPosts(this.id);\n      this.loadComments();\n      if (localStorage.getItem(\"token\")) {\n        this.isLogin = true;\n        this.userRole = localStorage.getItem(\"role\");\n      }\n    },\n    methods: {\n      async loadPosts(id) {\n        this.isLoading = true;\n        try {\n          const token = localStorage.getItem('token');\n          const headers = token ? { Authorization: `Bearer ${token}` } : {};\n          const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/board/post/${id}/detail`, { headers });\n          this.postList = response.data.data;\n          this.title = this.postList.title;\n          this.contents = this.postList.contents;\n        } catch (error) {\n          console.error(\"데이터 불러오기 오류:\", error);\n        }\n      },\n      async commentCreate() {\n        this.isLoading = true;\n        try {\n          const formData = new FormData();\n          formData.append('comment', this.comment);\n          const token = localStorage.getItem('token');\n          const headers = token ? { Authorization: `Bearer ${token}` } : {};\n          await axios.post(`${process.env.VUE_APP_API_BASE_URL}/board/${this.id}/comment`, formData, { headers });\n          // 댓글이 등록된 후 댓글 목록을 다시 불러옴\n          await this.loadComments();\n          // 최신 댓글이 가장 위로 오도록 댓글 목록을 역순으로 정렬\n          this.commentList = this.commentList.reverse();\n          alert(\"댓글이 등록되었습니다.\");\n        } catch (error) {\n          console.error(error);\n          alert(\"입력값 확인 필요\");\n        }\n        this.isLoading = false;\n      },\n      async loadComments() {\n        this.isLoading = true;\n        try {\n          const token = localStorage.getItem('token');\n          const headers = token ? { Authorization: `Bearer ${token}` } : {};\n          const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/board/${this.id}/comment/list`, { headers });\n          this.commentList = response.data.data;\n        } catch (error) {\n          console.error(\"데이터 불러오기 오류:\", error);\n        }\n      },\n      toggleEditMode() {\n        this.isEditing = !this.isEditing;\n        if (this.isEditing) {\n          // 수정 모드로 전환 시 제목과 내용을 복사하여 편집 가능한 변수에 저장\n          this.editedTitle = this.title;\n          this.editedContent = this.contents;\n        }\n      },\n      saveChanges() {\n        // 서버에 새로운 제목과 내용을 업데이트하는 로직을 추가해야 합니다.\n        // 이 예제에서는 제목과 내용을 업데이트하는 서버 요청을 보내는 코드를 작성하지는 않았습니다.\n        this.title = this.editedTitle;\n        this.contents = this.editedContent;\n        this.isEditing = false; // 수정 모드 종료\n      }\n    }\n  }\n  </script>\n  <style scoped>\n  .post-title-container {\n    margin-bottom: 20px;\n  }\n  .post-content-container {\n    margin-bottom: 20px;\n  }\n  .post-title {\n    border: 1px solid #ccc;\n    padding: 10px;\n  }\n  .post-contents {\n    border: 1px solid #ccc;\n    padding: 10px;\n  }\n  .comment-section {\n    display: flex;\n    flex-direction: column;\n  }\n  .form-container {\n    margin-bottom: 20px;\n  }\n  .comment-box {\n    margin-bottom: 10px;\n    padding: 10px;\n    border: 1px solid #ccc;\n  }\n  .email-box,\n  .comment-text-box {\n    margin-bottom: 5px;\n  }\n  .email-box p,\n  .comment-text-box p {\n    margin: 0;\n    padding: 5px;\n  }\n  /* Custom Input Style */\n  .custom-input {\n    border: 1px solid #CED4DA;\n    border-radius: 0.25rem;\n    padding: 0.375rem 0.75rem;\n    box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);\n  }\n  /* Custom Button Style */\n  .custom-btn {\n    border-radius: 0.25rem;\n    box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);\n  }\n  </style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}