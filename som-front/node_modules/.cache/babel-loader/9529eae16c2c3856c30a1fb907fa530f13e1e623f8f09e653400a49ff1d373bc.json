{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelSelect as _vModelSelect, withDirectives as _withDirectives, vModelText as _vModelText, withModifiers as _withModifiers, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"page-header text-center\",\n  style: {\n    \"margin-top\": \"20px\"\n  }\n};\nconst _hoisted_3 = {\n  class: \"d-flex justify-content-between\",\n  style: {\n    \"margin-top\": \"20px\"\n  }\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"title\"\n}, \"제목\", -1 /* HOISTED */);\nconst _hoisted_5 = [_hoisted_4];\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"검색\", -1 /* HOISTED */);\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"a\", {\n  href: \"/postcreate\"\n}, [/*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"btn btn-outline-primary\",\n  type: \"submit\",\n  value: \"작성\",\n  style: {\n    \"margin-top\": \"-3px\",\n    \"background-color\": \"transparent\",\n    \"border-color\": \"transparent\",\n    \"color\": \"#007bff\"\n  }\n}, [/*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"fas fa-pencil-alt\",\n  style: {\n    \"margin-right\": \"5px\"\n  }\n}), /*#__PURE__*/_createTextVNode(\"게시글 작성 \")])], -1 /* HOISTED */);\nconst _hoisted_8 = {\n  class: \"table-container shadow-sm\"\n};\nconst _hoisted_9 = {\n  class: \"table\"\n};\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"게시글 번호\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"제목\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"글쓴이(rank)\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"작성일\")])], -1 /* HOISTED */);\nconst _hoisted_11 = [\"onClick\"];\nconst _hoisted_12 = {\n  key: 0\n};\nconst _hoisted_13 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_PaginationComponent = _resolveComponent(\"PaginationComponent\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"h1\", null, _toDisplayString($props.pageTitle), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.searchPosts && $options.searchPosts(...args), [\"prevent\"])),\n    style: {\n      \"display\": \"flex\",\n      \"align-items\": \"center\"\n    }\n  }, [_withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.searchType = $event),\n    style: {\n      \"width\": \"auto\",\n      \"margin-right\": \"5px\"\n    }\n  }, [..._hoisted_5], 512 /* NEED_PATCH */), [[_vModelSelect, $data.searchType]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.searchValue = $event),\n    type: \"text\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.searchValue]]), _hoisted_6], 32 /* NEED_HYDRATION */), _hoisted_7]), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"table\", _hoisted_9, [_hoisted_10, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.filteredPosts, post => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: post.postId,\n      onClick: $event => $options.goToDetail(post.id)\n    }, [_createElementVNode(\"td\", null, _toDisplayString(post.id), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(post.title), 1 /* TEXT */), _createCommentVNode(\" <td>\\n                            <a :href=\\\"`/posts/${post.id}/detail`\\\">{{ truncate(post.title) }}</a>\\n                        </td> \"), _createElementVNode(\"td\", null, _toDisplayString(post.nickname + '(' + post.rank + ')'), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(post.createdAt), 1 /* TEXT */), $props.isAdmin ? (_openBlock(), _createElementBlock(\"td\", _hoisted_12, [_createElementVNode(\"button\", {\n      onClick: $event => $options.deletePost(post.id),\n      class: \"btn btn-secondary\"\n    }, \"삭제\", 8 /* PROPS */, _hoisted_13)])) : _createCommentVNode(\"v-if\", true)], 8 /* PROPS */, _hoisted_11);\n  }), 128 /* KEYED_FRAGMENT */))])])]), _createCommentVNode(\" 페이지네이션 컴포넌트 추가 \"), _createVNode(_component_PaginationComponent, {\n    currentPage: $data.currentPage,\n    totalPages: $data.totalPageCount,\n    onPageChange: $options.changePage\n  }, null, 8 /* PROPS */, [\"currentPage\", \"totalPages\", \"onPageChange\"])]);\n}","map":{"version":3,"names":["class","style","_createElementVNode","value","_hoisted_4","type","href","_createTextVNode","key","_createElementBlock","_hoisted_1","_hoisted_2","_toDisplayString","$props","pageTitle","_hoisted_3","onSubmit","_cache","_withModifiers","args","$options","searchPosts","$event","$data","searchType","_hoisted_5","searchValue","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_Fragment","_renderList","filteredPosts","post","postId","onClick","goToDetail","id","title","_createCommentVNode","nickname","rank","createdAt","isAdmin","_hoisted_12","deletePost","_hoisted_13","_hoisted_11","_createVNode","_component_PaginationComponent","currentPage","totalPages","totalPageCount","onPageChange","changePage"],"sources":["/Users/song/Desktop/springproject/som-front/src/components/PostListComponent.vue"],"sourcesContent":["<template>\n    <div class=\"container\">\n        <div class=\"page-header text-center\" style=\"margin-top: 20px\"><h1>{{pageTitle}}</h1></div>\n        <div class=\"d-flex justify-content-between\" style=\"margin-top:20px;\">\n            <form @submit.prevent=\"searchPosts\" style=\"display: flex; align-items: center;\">\n                <select v-model=\"searchType\" style=\"width: auto; margin-right: 5px;\">\n                    <option value=\"title\">제목</option>\n                </select>\n                <input v-model=\"searchValue\" type=\"text\"/>\n                <button type=\"submit\">검색</button>\n            </form>\n            <a href=\"/postcreate\">\n                <button class=\"btn btn-outline-primary\" type=\"submit\" value=\"작성\" style=\"margin-top: -3px; background-color: transparent; border-color: transparent; color: #007bff;\">\n                    <i class=\"fas fa-pencil-alt\" style=\"margin-right: 5px;\"></i>게시글 작성\n                </button>\n            </a>\n            \n            \n                    </div>\n        <div class=\"table-container shadow-sm\">\n        <table class=\"table\">\n            <thead>\n                <tr>\n                    <th>게시글 번호</th>\n                    <th>제목</th>\n                    <th>글쓴이(rank)</th>\n                    <th>작성일</th>\n                </tr>\n            </thead>\n                <tbody>\n                    <tr v-for=\"post in filteredPosts\" :key=\"post.postId\" @click=\"goToDetail(post.id)\">\n                        <td>{{post.id}}</td>\n                        <td>{{post.title}}</td>\n                        <!-- <td>\n                            <a :href=\"`/posts/${post.id}/detail`\">{{ truncate(post.title) }}</a>\n                        </td> -->\n                        <td>{{post.nickname + '(' + post.rank + ')'}}</td>\n                        <td>{{post.createdAt}}</td>\n                        <td v-if=\"isAdmin\"><button @click=\"deletePost(post.id)\" class=\"btn btn-secondary\">삭제</button></td>\n                    </tr>\n                </tbody>\n        </table>\n        </div>\n        <!-- 페이지네이션 컴포넌트 추가 -->\n        <PaginationComponent :currentPage=\"currentPage\" :totalPages=\"totalPageCount\" @page-change=\"changePage\" />\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport PaginationComponent  from '@/components/PaginationComponent.vue'; // 컴포넌트 이름 변경\nexport default {\n    components: {\n        PaginationComponent  // 컴포넌트 이름 변경된 것을 등록합니다.\n    },\n    props: ['isAdmin', 'pageTitle'],\n    data() {\n        return {\n            postList: [],\n            pageSize: 10, //페이지 당 목록 갯수\n            currentPage: 0, //화면 페이지\n            searchType: 'title', // 기본값 설정\n            searchValue: '',\n            isLastPage: false,\n            isLoading: false,\n            totalPageCount: 0 // 전체 페이지 수\n        };\n    },\n    created(){\n        this.loadPosts();\n    },\n\n    methods: {\n        goToDetail(postId) {\n        // postId를 사용하여 해당 게시물의 상세 페이지 경로를 생성\n        const detailPath = `/posts/${postId}/detail`;\n        // 생성된 경로로 페이지 이동\n        this.$router.push(detailPath);\n        },\n        truncate(value, length = 10) {\n            if (!value) return '';\n            if (value.length <= length) return value;\n            return value.substr(0, length) + '...';\n        },\n\n        searchPosts(){\n            this.postList = [];\n            this.currentPage = 0; // 검색을 하면 페이지를 다시 1페이지로 설정\n            this.loadPosts();\n        },\n\n        async deletePost(postId){\n            if (confirm(\"정말 삭제 하시겠습니까?\")) {\n                const token = localStorage.getItem('token');\n                const headers = token ? { Authorization: `Bearer ${token}` } : {};\n                await axios.delete(`${process.env.VUE_APP_API_BASE_URL}/board/post/${postId}/delete`, { headers });\n                window.location.reload();\n            }\n        },\n\n        async loadPosts(){\n            this.isLoading = true;\n            try{\n            // params 키워드 사용해야 파라미터 방식으로 axios요청 가능\n            const params = {\n                page: this.currentPage,\n                size: this.pageSize,\n                title: this.searchValue\n                // [this.searchType]: this.searchValue\n            }\n            if(this.searchType === \"postid\"){\n                params.postid = this.searchValue;\n            }else if(this.searchType === \"title\"){\n                params.title = this.searchValue;\n            }\n            const token = localStorage.getItem('token');\n            const headers = token ? { Authorization: `Bearer ${token}` } : {};\n            const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/board/post/list`, {headers, params});\n            this.postList = response.data.data;\n            this.totalPageCount = response.data.totalPage; // 전체 페이지 수 업데이트\n            console.log(this.postList)\n            console.log(response)\n            }catch(error){\n                console.error(\"데이터 불러오기 오류:\", error); // 에러 콘솔에 표시\n            }\n            this.isLoading = false;\n        },\n        changePage(pageNum) {\n        this.currentPage = pageNum;\n        this.loadPosts();\n        }\n    },\n    computed: {\n    filteredPosts() {\n      return this.postList.filter(post => post.title.includes(this.searchValue));\n    }\n  }\n}\n</script>\n\n<style>\n    .table-container {\n        box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);\n    }\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}