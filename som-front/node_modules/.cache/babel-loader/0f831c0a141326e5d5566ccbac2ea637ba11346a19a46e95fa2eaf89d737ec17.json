{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\n// import CKEditor from '@ckeditor/ckeditor5-vue';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nexport default {\n  components: {\n    // ckeditor: CKEditor.component\n  },\n  props: ['isAdmin', 'pageTitle', 'id'],\n  data() {\n    return {\n      postList: [],\n      // pageSize: 10, //페이지 당 목록 갯수\n      // currentPage: 0, //화면 페이지\n      searchType: 'optional',\n      // 기본값 설정\n      searchValue: '',\n      title: this.title,\n      contents: this.contents,\n      comment: '',\n      isLastPage: false,\n      isLoading: false,\n      editor: ClassicEditor,\n      editorData: '<p>내용을 입력하세요</p>',\n      editorConfig: {\n        toolbar: ['heading', '|', 'bold', 'italic', 'link', 'bulletedList', 'numberedList', 'blockQuote'],\n        heading: {\n          options: [{\n            model: 'paragraph',\n            title: '본문',\n            class: 'ck-heading_paragraph'\n          }, {\n            model: 'heading1',\n            view: 'h1',\n            title: '헤딩 1',\n            class: 'ck-heading_heading1'\n          }, {\n            model: 'heading2',\n            view: 'h2',\n            title: '헤딩 2',\n            class: 'ck-heading_heading2'\n          }, {\n            model: 'heading3',\n            view: 'h3',\n            title: '헤딩 3',\n            class: 'ck-heading_heading3'\n          }, {\n            model: 'heading4',\n            view: 'h4',\n            title: '헤딩 4',\n            class: 'ck-heading_heading4'\n          }, {\n            model: 'heading5',\n            view: 'h5',\n            title: '헤딩 5',\n            class: 'ck-heading_heading5'\n          }, {\n            model: 'heading6',\n            view: 'h6',\n            title: '헤딩 6',\n            class: 'ck-heading_heading6'\n          }]\n        }\n      }\n    };\n  },\n  created() {\n    this.loadPosts(this.id);\n    this.commentCreate(this.id);\n  },\n  methods: {\n    truncate(value, length = 10) {\n      if (!value) return '';\n      if (value.length <= length) return value;\n      return value.substr(0, length) + '...';\n    },\n    searchItems() {\n      this.postList = [];\n      this.currentPage = 0;\n      this.isLastPage = false;\n      this.loadPosts();\n    },\n    async loadPosts(id) {\n      this.isLoading = true;\n      try {\n        // params 키워드 사용해야 파라미터 방식으로 axios요청 가능\n        const params = {\n          page: this.currentPage,\n          size: this.pageSize\n          // [this.searchType]: this.searchValue\n        };\n        if (this.searchType === \"postid\") {\n          params.postid = this.searchValue;\n        } else if (this.searchType === \"title\") {\n          params.title = this.searchValue;\n        }\n        const token = localStorage.getItem('token');\n        const headers = token ? {\n          Authorization: `Bearer ${token}`\n        } : {};\n        const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/board/post/${id}/detail`, {\n          headers,\n          params\n        });\n        this.postList = response.data.data;\n        this.title = this.postList.title, this.contents = this.postList.contents;\n        console.log(this.postList);\n      } catch (error) {\n        console.error(\"데이터 불러오기 오류:\", error); // 에러 콘솔에 표시\n      }\n    },\n    async commentCreate(id) {\n      try {\n        const formData = new FormData();\n        formData.append('comment', this.comment);\n        const token = localStorage.getItem('token');\n        const headers = token ? {\n          Authorization: `Bearer ${token}`\n        } : {};\n        console.log(formData);\n        await axios.post(`${process.env.VUE_APP_API_BASE_URL}/board/${id}/comment`, {\n          headers,\n          formData\n        });\n        // 성공적으로 작성된 경우 리다이렉트 또는 다른 처리 수행\n        this.$router.push({\n          name: 'SOMMain'\n        });\n      } catch (error) {\n        // 오류 발생 시 처리\n        console.error(error);\n        alert(\"입력값 확인 필요\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","ClassicEditor","components","props","data","postList","searchType","searchValue","title","contents","comment","isLastPage","isLoading","editor","editorData","editorConfig","toolbar","heading","options","model","class","view","created","loadPosts","id","commentCreate","methods","truncate","value","length","substr","searchItems","currentPage","params","page","size","pageSize","postid","token","localStorage","getItem","headers","Authorization","response","get","process","env","VUE_APP_API_BASE_URL","console","log","error","formData","FormData","append","post","$router","push","name","alert"],"sources":["/Users/song/Desktop/springproject/som-front/src/views/PostDetail.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n      <div class=\"page-header text-center\" style=\"margin-top: 20px\"><h1>게시글</h1></div>\n            <form @submit.prevent=\"postCreate\">\n                <a href=\"\"><button class=\"btn btn-primary\" type=\"submit\" value=\"작성\">게시글 수정</button></a>\n                <div class=\"form-group\">\n                    <label>게시글 제목:</label>\n                    <input type=\"text\" v-model=\"title\" class=\"form-control\" readonly>\n                </div>\n                <div class=\"form-group\">\n                    <label>게시글 내용:</label>\n                    <div v-html=\"contents\"></div>\n                    <!-- <ckeditor :editor=\"editor\" v-model=\"contents\" :config=\"editorConfig\"></ckeditor> -->\n                </div>\n                <!-- <div class=\"form-group\">\n                    <button type=\"submit\" class=\"btn btn-primary mt-3\">작성완료</button>\n                </div> -->\n            </form>\n        </div>\n    <div class=\"container\">\n        <form @submit.prevent=\"commentCreate\">\n            <div class=\"form-group\">\n                <label>댓글 작성</label>\n                <input type=\"text\" v-model=\"comment\" class=\"form-control\">\n                <button type=\"submit\" class=\"btn btn-primary\" :disabled=\"!comment.trim()\">등록</button>\n                \n            </div>\n        </form>\n    </div>\n</template>\n\n\n<script>\nimport axios from 'axios';\n// import CKEditor from '@ckeditor/ckeditor5-vue';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nexport default {\n    components: {\n    // ckeditor: CKEditor.component\n    },\n    props: ['isAdmin', 'pageTitle', 'id'],\n    data() {\n        return {\n            postList: [],\n            // pageSize: 10, //페이지 당 목록 갯수\n            // currentPage: 0, //화면 페이지\n            searchType: 'optional', // 기본값 설정\n            searchValue: '',\n            title: this.title,\n            contents: this.contents,\n            comment : '',\n            isLastPage: false,\n            isLoading: false,\n            editor: ClassicEditor,\n            editorData: '<p>내용을 입력하세요</p>',\n            editorConfig: {\n                    toolbar: [ 'heading', '|', 'bold', 'italic', 'link', 'bulletedList', 'numberedList', 'blockQuote' ],\n                    heading: {\n                        options: [\n                        { model: 'paragraph', title: '본문', class: 'ck-heading_paragraph' },\n                        { model: 'heading1', view: 'h1', title: '헤딩 1', class: 'ck-heading_heading1' },\n                        { model: 'heading2', view: 'h2', title: '헤딩 2', class: 'ck-heading_heading2' },\n                        { model: 'heading3', view: 'h3', title: '헤딩 3', class: 'ck-heading_heading3' },\n                        { model: 'heading4', view: 'h4', title: '헤딩 4', class: 'ck-heading_heading4' },\n                        { model: 'heading5', view: 'h5', title: '헤딩 5', class: 'ck-heading_heading5' },\n                        { model: 'heading6', view: 'h6', title: '헤딩 6', class: 'ck-heading_heading6' }\n                    ]\n                }\n            }\n        };\n    },\n    created(){\n        this.loadPosts(this.id);\n        this.commentCreate(this.id);\n    },\n\n    methods: {\n        truncate(value, length = 10) {\n            if (!value) return '';\n            if (value.length <= length) return value;\n            return value.substr(0, length) + '...';\n        },\n\n        searchItems(){\n            this.postList = [];\n            this.currentPage = 0;\n            this.isLastPage = false;\n            this.loadPosts();\n        },\n\n        async loadPosts(id){\n            this.isLoading = true;\n            try{\n            // params 키워드 사용해야 파라미터 방식으로 axios요청 가능\n            const params = {\n                page: this.currentPage,\n                size: this.pageSize,\n                // [this.searchType]: this.searchValue\n            }\n            if(this.searchType === \"postid\"){\n                params.postid = this.searchValue;\n            }else if(this.searchType === \"title\"){\n                params.title = this.searchValue;\n            }\n            const token = localStorage.getItem('token');\n            const headers = token ? { Authorization: `Bearer ${token}` } : {};\n            const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/board/post/${id}/detail`, {headers, params});\n            this.postList = response.data.data;\n            this.title = this.postList.title,\n            this.contents = this.postList.contents;\n            console.log(this.postList)\n            }catch(error){\n                console.error(\"데이터 불러오기 오류:\", error); // 에러 콘솔에 표시\n            }\n        },\n        async commentCreate(id){\n            try {\n                const formData = new FormData();\n                formData.append('comment', this.comment);\n\n                const token = localStorage.getItem('token');\n                const headers = token ? { Authorization: `Bearer ${token}` } : {};\n                console.log(formData)\n                await axios.post(`${process.env.VUE_APP_API_BASE_URL}/board/${id}/comment`, {headers,formData});\n                // 성공적으로 작성된 경우 리다이렉트 또는 다른 처리 수행\n                this.$router.push({ name: 'SOMMain' });\n            } catch (error) {\n                // 오류 발생 시 처리\n                console.error(error);\n                alert(\"입력값 확인 필요\");\n            }\n        }\n    }\n}\n</script>\n<style>\n.ck-editor__editable { height: 400px; }\n.ck-content { font-size: 12px; }\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}