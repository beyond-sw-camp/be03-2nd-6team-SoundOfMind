{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport PaginationComponent from '@/components/PaginationComponent.vue'; // 컴포넌트 이름 변경\nexport default {\n  components: {\n    PaginationComponent // 컴포넌트 이름 변경된 것을 등록합니다.\n  },\n  props: ['isAdmin', 'pageTitle'],\n  data() {\n    return {\n      postList: [],\n      pageSize: 10,\n      //페이지 당 목록 갯수\n      currentPage: 0,\n      //화면 페이지\n      searchType: 'title',\n      // 기본값 설정\n      searchValue: '',\n      isLastPage: false,\n      isLoading: false,\n      totalPageCount: 0 // 전체 페이지 수\n    };\n  },\n  created() {\n    this.loadPosts();\n  },\n  methods: {\n    goToDetail(postId) {\n      // postId를 사용하여 해당 게시물의 상세 페이지 경로를 생성\n      const detailPath = `/posts/${postId}/detail`;\n      // 생성된 경로로 페이지 이동\n      this.$router.push(detailPath);\n    },\n    truncate(value, length = 10) {\n      if (!value) return '';\n      if (value.length <= length) return value;\n      return value.substr(0, length) + '...';\n    },\n    searchPosts() {\n      this.postList = [];\n      this.currentPage = 0; // 검색을 하면 페이지를 다시 1페이지로 설정\n      this.loadPosts();\n    },\n    async deletePost(postId) {\n      if (confirm(\"정말 삭제 하시겠습니까?\")) {\n        const token = localStorage.getItem('token');\n        const headers = token ? {\n          Authorization: `Bearer ${token}`\n        } : {};\n        await axios.delete(`${process.env.VUE_APP_API_BASE_URL}/board/post/${postId}/delete`, {\n          headers\n        });\n        window.location.reload();\n      }\n    },\n    async loadPosts() {\n      this.isLoading = true;\n      try {\n        // params 키워드 사용해야 파라미터 방식으로 axios요청 가능\n        const params = {\n          page: this.currentPage,\n          size: this.pageSize,\n          title: this.searchValue\n          // [this.searchType]: this.searchValue\n        };\n        if (this.searchType === \"postid\") {\n          params.postid = this.searchValue;\n        } else if (this.searchType === \"title\") {\n          params.title = this.searchValue;\n        }\n        const token = localStorage.getItem('token');\n        const headers = token ? {\n          Authorization: `Bearer ${token}`\n        } : {};\n        const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/board/post/list`, {\n          headers,\n          params\n        });\n        this.postList = response.data.data;\n        this.totalPageCount = response.data.totalPage; // 전체 페이지 수 업데이트\n        console.log(this.postList);\n        console.log(response);\n      } catch (error) {\n        console.error(\"데이터 불러오기 오류:\", error); // 에러 콘솔에 표시\n      }\n      this.isLoading = false;\n    },\n    changePage(pageNum) {\n      this.currentPage = pageNum;\n      this.loadPosts();\n    }\n  },\n  computed: {\n    filteredPosts() {\n      return this.postList.filter(post => post.title.includes(this.searchValue));\n    }\n  }\n};","map":{"version":3,"names":["axios","PaginationComponent","components","props","data","postList","pageSize","currentPage","searchType","searchValue","isLastPage","isLoading","totalPageCount","created","loadPosts","methods","goToDetail","postId","detailPath","$router","push","truncate","value","length","substr","searchPosts","deletePost","confirm","token","localStorage","getItem","headers","Authorization","delete","process","env","VUE_APP_API_BASE_URL","window","location","reload","params","page","size","title","postid","response","get","totalPage","console","log","error","changePage","pageNum","computed","filteredPosts","filter","post","includes"],"sources":["/Users/song/Desktop/springproject/som-front/src/components/PostListComponent.vue"],"sourcesContent":["<template>\n    <div class=\"container\">\n        <div class=\"page-header text-center\" style=\"margin-top: 20px\"><h1>{{pageTitle}}</h1></div>\n        <div class=\"d-flex justify-content-between\" style=\"margin-top:20px;\">\n            <form @submit.prevent=\"searchPosts\" style=\"display: flex; align-items: center;\">\n                <select v-model=\"searchType\" style=\"width: auto; margin-right: 5px;\">\n                    <option value=\"title\">제목</option>\n                </select>\n                <input v-model=\"searchValue\" type=\"text\"/>\n                <button type=\"submit\">검색</button>\n            </form>\n            <a href=\"/postcreate\">\n                <button class=\"btn btn-outline-primary\" type=\"submit\" value=\"작성\" style=\"margin-top: -3px; background-color: transparent; border-color: transparent; color: #007bff;\">\n                    <i class=\"fas fa-pencil-alt\" style=\"margin-right: 5px;\"></i>게시글 작성\n                </button>\n            </a>\n            \n            \n                    </div>\n        <div class=\"table-container shadow-sm\">\n        <table class=\"table\">\n            <thead>\n                <tr>\n                    <th>게시글 번호</th>\n                    <th>제목</th>\n                    <th>글쓴이(rank)</th>\n                    <th>작성일</th>\n                </tr>\n            </thead>\n                <tbody>\n                    <tr v-for=\"post in filteredPosts\" :key=\"post.postId\" @click=\"goToDetail(post.id)\">\n                        <td>{{post.id}}</td>\n                        <td>{{post.title}}</td>\n                        <!-- <td>\n                            <a :href=\"`/posts/${post.id}/detail`\">{{ truncate(post.title) }}</a>\n                        </td> -->\n                        <td>{{post.nickname + '(' + post.rank + ')'}}</td>\n                        <td>{{post.createdAt}}</td>\n                        <td v-if=\"isAdmin\"><button @click=\"deletePost(post.id)\" class=\"btn btn-secondary\">삭제</button></td>\n                    </tr>\n                </tbody>\n        </table>\n        </div>\n        <!-- 페이지네이션 컴포넌트 추가 -->\n        <PaginationComponent :currentPage=\"currentPage\" :totalPages=\"totalPageCount\" @page-change=\"changePage\" />\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport PaginationComponent  from '@/components/PaginationComponent.vue'; // 컴포넌트 이름 변경\nexport default {\n    components: {\n        PaginationComponent  // 컴포넌트 이름 변경된 것을 등록합니다.\n    },\n    props: ['isAdmin', 'pageTitle'],\n    data() {\n        return {\n            postList: [],\n            pageSize: 10, //페이지 당 목록 갯수\n            currentPage: 0, //화면 페이지\n            searchType: 'title', // 기본값 설정\n            searchValue: '',\n            isLastPage: false,\n            isLoading: false,\n            totalPageCount: 0 // 전체 페이지 수\n        };\n    },\n    created(){\n        this.loadPosts();\n    },\n\n    methods: {\n        goToDetail(postId) {\n        // postId를 사용하여 해당 게시물의 상세 페이지 경로를 생성\n        const detailPath = `/posts/${postId}/detail`;\n        // 생성된 경로로 페이지 이동\n        this.$router.push(detailPath);\n        },\n        truncate(value, length = 10) {\n            if (!value) return '';\n            if (value.length <= length) return value;\n            return value.substr(0, length) + '...';\n        },\n\n        searchPosts(){\n            this.postList = [];\n            this.currentPage = 0; // 검색을 하면 페이지를 다시 1페이지로 설정\n            this.loadPosts();\n        },\n\n        async deletePost(postId){\n            if (confirm(\"정말 삭제 하시겠습니까?\")) {\n                const token = localStorage.getItem('token');\n                const headers = token ? { Authorization: `Bearer ${token}` } : {};\n                await axios.delete(`${process.env.VUE_APP_API_BASE_URL}/board/post/${postId}/delete`, { headers });\n                window.location.reload();\n            }\n        },\n\n        async loadPosts(){\n            this.isLoading = true;\n            try{\n            // params 키워드 사용해야 파라미터 방식으로 axios요청 가능\n            const params = {\n                page: this.currentPage,\n                size: this.pageSize,\n                title: this.searchValue\n                // [this.searchType]: this.searchValue\n            }\n            if(this.searchType === \"postid\"){\n                params.postid = this.searchValue;\n            }else if(this.searchType === \"title\"){\n                params.title = this.searchValue;\n            }\n            const token = localStorage.getItem('token');\n            const headers = token ? { Authorization: `Bearer ${token}` } : {};\n            const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/board/post/list`, {headers, params});\n            this.postList = response.data.data;\n            this.totalPageCount = response.data.totalPage; // 전체 페이지 수 업데이트\n            console.log(this.postList)\n            console.log(response)\n            }catch(error){\n                console.error(\"데이터 불러오기 오류:\", error); // 에러 콘솔에 표시\n            }\n            this.isLoading = false;\n        },\n        changePage(pageNum) {\n        this.currentPage = pageNum;\n        this.loadPosts();\n        }\n    },\n    computed: {\n    filteredPosts() {\n      return this.postList.filter(post => post.title.includes(this.searchValue));\n    }\n  }\n}\n</script>\n\n<style>\n    .table-container {\n        box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);\n    }\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}