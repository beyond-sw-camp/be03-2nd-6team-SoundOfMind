{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-b866336a\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"page-header text-center\",\n  style: {\n    \"margin-top\": \"20px\"\n  }\n}, [/*#__PURE__*/_createElementVNode(\"h1\", null, \"게시글\")], -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"form-group\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", null, \"게시글 제목:\", -1 /* HOISTED */));\nconst _hoisted_5 = [\"innerHTML\"];\nconst _hoisted_6 = {\n  class: \"form-group\"\n};\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", null, \"게시글 내용:\", -1 /* HOISTED */));\nconst _hoisted_8 = [\"innerHTML\"];\nconst _hoisted_9 = {\n  class: \"container\"\n};\nconst _hoisted_10 = {\n  class: \"form-group\"\n};\nconst _hoisted_11 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", null, \"댓글 작성\", -1 /* HOISTED */));\nconst _hoisted_12 = [\"disabled\"];\nconst _hoisted_13 = {\n  class: \"email-box\"\n};\nconst _hoisted_14 = {\n  key: 0\n};\nconst _hoisted_15 = {\n  key: 1\n};\nconst _hoisted_16 = {\n  class: \"comment-text-box\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_hoisted_2, _createCommentVNode(\" <form @submit.prevent=\\\"postCreate\\\"> \"), _createCommentVNode(\" <a href=\\\"\\\"><button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" value=\\\"작성\\\">게시글 수정</button></a> \"), _createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _createElementVNode(\"div\", {\n    innerHTML: $data.title\n  }, null, 8 /* PROPS */, _hoisted_5)]), _createElementVNode(\"div\", _hoisted_6, [_hoisted_7, _createElementVNode(\"div\", {\n    innerHTML: $data.contents\n  }, null, 8 /* PROPS */, _hoisted_8), _createCommentVNode(\" <ckeditor :editor=\\\"editor\\\" v-model=\\\"contents\\\" :config=\\\"editorConfig\\\"></ckeditor> \")]), _createCommentVNode(\" </form> \")]), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"form\", {\n    onSubmit: _cache[1] || (_cache[1] = _withModifiers((...args) => $options.commentCreate && $options.commentCreate(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_10, [_hoisted_11, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.comment = $event),\n    class: \"form-control\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.comment]]), _createElementVNode(\"button\", {\n    type: \"submit\",\n    class: \"btn btn-primary\",\n    disabled: !$data.comment.trim()\n  }, \"등록\", 8 /* PROPS */, _hoisted_12)])], 32 /* NEED_HYDRATION */)]), _createCommentVNode(\" <div v-for=\\\"comment in commentList\\\" :key=\\\"comment.id\\\" class=\\\"comment-box\\\">\\n        <p>{{ comment.member_email }}</p>\\n        <p>{{ comment.comment }}</p>\\n    </div> \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.commentList, comment => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: comment.id,\n      class: \"comment-box\"\n    }, [_createElementVNode(\"div\", _hoisted_13, [_ctx.userRole !== 'ADMIN' ? (_openBlock(), _createElementBlock(\"p\", _hoisted_14, \"익명\")) : _createCommentVNode(\"v-if\", true), _ctx.userRole === 'ADMIN' ? (_openBlock(), _createElementBlock(\"p\", _hoisted_15, _toDisplayString(comment.nickname), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_16, [_createElementVNode(\"p\", null, _toDisplayString(comment.comment), 1 /* TEXT */)])]);\n  }), 128 /* KEYED_FRAGMENT */))], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementVNode","style","key","_createElementBlock","_Fragment","_hoisted_1","_hoisted_2","_createCommentVNode","_hoisted_3","_hoisted_4","innerHTML","$data","title","_hoisted_5","_hoisted_6","_hoisted_7","contents","_hoisted_8","_hoisted_9","onSubmit","_cache","_withModifiers","args","$options","commentCreate","_hoisted_10","_hoisted_11","type","$event","comment","disabled","trim","_hoisted_12","_renderList","commentList","id","_hoisted_13","_ctx","userRole","_hoisted_14","_hoisted_15","_toDisplayString","nickname","_hoisted_16"],"sources":["/Users/song/Desktop/springproject/som-front/src/views/PostDetail.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n      <div class=\"page-header text-center\" style=\"margin-top: 20px\">\n        <h1>게시글</h1>\n        </div>\n            <!-- <form @submit.prevent=\"postCreate\"> -->\n                <!-- <a href=\"\"><button class=\"btn btn-primary\" type=\"submit\" value=\"작성\">게시글 수정</button></a> -->\n                <div class=\"form-group\">\n                    <label>게시글 제목:</label>\n                    <div v-html=\"title\"></div>\n                </div>\n                <div class=\"form-group\">\n                    <label>게시글 내용:</label>\n                    <div v-html=\"contents\"></div>\n                    <!-- <ckeditor :editor=\"editor\" v-model=\"contents\" :config=\"editorConfig\"></ckeditor> -->\n                </div>\n            <!-- </form> -->\n        </div>\n\n    <div class=\"container\">\n        <form @submit.prevent=\"commentCreate\">\n            <div class=\"form-group\">\n                <label>댓글 작성</label>\n                <input type=\"text\" v-model=\"comment\" class=\"form-control\">\n                <button type=\"submit\" class=\"btn btn-primary\" :disabled=\"!comment.trim()\">등록</button>\n            </div>\n        </form>\n    </div>\n\n    <!-- <div v-for=\"comment in commentList\" :key=\"comment.id\" class=\"comment-box\">\n        <p>{{ comment.member_email }}</p>\n        <p>{{ comment.comment }}</p>\n    </div> -->\n\n    <div v-for=\"comment in commentList\" :key=\"comment.id\" class=\"comment-box\">\n        <div class=\"email-box\">\n          <p v-if=\"userRole !== 'ADMIN'\">익명</p>\n          <p v-if=\"userRole === 'ADMIN'\">{{ comment.nickname }}</p>\n        </div>\n        <div class=\"comment-text-box\">\n          <p>{{ comment.comment }}</p>\n        </div>\n      </div>\n      \n\n\n</template>\n\n\n<script>\nimport axios from 'axios';\n// import CKEditor from '@ckeditor/ckeditor5-vue';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nexport default {\n    props: ['isAdmin', 'pageTitle', 'id'],\n    data() {\n        return {\n            postList: [],\n            commentList:[],\n            // pageSize: 10, //페이지 당 목록 갯수\n            // currentPage: 0, //화면 페이지\n            searchType: 'optional', // 기본값 설정\n            searchValue: '',\n            title: '',\n            contents: '',\n            comment : '',\n            isLastPage: false,\n            isLoading: false,\n            editor: ClassicEditor,\n        };\n    },\n    created(){\n        this.loadPosts(this.id);\n        this.loadComments();\n        if (localStorage.getItem(\"token\")) {\n            this.isLogin = true;\n            this.userRole = localStorage.getItem(\"role\");\n        }\n    },\n\n    methods: {\n        async loadPosts(id){\n            console.log(id)\n            this.isLoading = true;\n            try{\n            // params 키워드 사용해야 파라미터 방식으로 axios요청 가능\n            const params = {\n                page: this.currentPage,\n                size: this.pageSize,\n            }\n            const token = localStorage.getItem('token');\n            const headers = token ? { Authorization: `Bearer ${token}` } : {};\n            const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/board/post/${id}/detail`, {headers, params});\n            this.postList = response.data.data;\n            this.title = this.postList.title,\n            this.contents = this.postList.contents;\n            console.log(this.postList)\n            }catch(error){\n                console.error(\"데이터 불러오기 오류:\", error); // 에러 콘솔에 표시\n            }\n        },\n        async commentCreate(){\n            this.isLoading = true;\n            try {\n                const formData = new FormData();\n                formData.append('comment', this.comment);\n\n                const token = localStorage.getItem('token');\n                const headers = token ? { Authorization: `Bearer ${token}` } : {};\n                console.log(formData)\n                await axios.post(`${process.env.VUE_APP_API_BASE_URL}/board/${this.id}/comment`, formData, { headers });\n\n                // this.$router.push({ name: 'PostListDetail' });\n                // 댓글 등록 후에 해당 게시글을 다시 불러옴\n                this.loadPosts(this.id);\n                alert(\"댓글이 등록되었습니다.\");\n                window.location.reload();\n                // this.$router.push({ name: 'PostListDetail' });\n            } catch (error) {\n                // 오류 발생 시 처리\n                console.error(error);\n                alert(\"입력값 확인 필요\");\n            }\n            this.isLoading = false;\n        },\n        async loadComments(id){\n            console.log(id)\n            this.isLoading = true;\n            try{\n            // params 키워드 사용해야 파라미터 방식으로 axios요청 가능\n            const params = {\n                page: this.currentPage,\n                size: this.pageSize,\n            }\n            const token = localStorage.getItem('token');\n            const headers = token ? { Authorization: `Bearer ${token}` } : {};\n            const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/board/${this.id}/comment/list`, {headers, params});\n            this.commentList = response.data.data;\n            // this.title = this.postList;\n            // this.contents = this.postList.contents;\n            console.log(this.commentList)\n            }catch(error){\n                console.error(\"데이터 불러오기 오류:\", error); // 에러 콘솔에 표시\n            }\n        },\n    }\n}\n</script>\n\n\n<style scoped>\n.ck-editor__editable { height: 400px; }\n.ck-content { font-size: 12px; }\n.comment-box {\n  margin-bottom: 10px;\n  padding: 10px;\n  border: 1px solid #ccc;\n}\n\n.email-box, .comment-text-box {\n  margin-bottom: 5px;\n}\n\n.email-box p, .comment-text-box p {\n  margin: 0;\n  padding: 5px;\n}\n</style>\n\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAW;gEAClBC,mBAAA,CAEQ;EAFHD,KAAK,EAAC,yBAAyB;EAACE,KAAwB,EAAxB;IAAA;EAAA;iBACnCD,mBAAA,CAAY,YAAR,KAAG,E;;EAIMD,KAAK,EAAC;AAAY;gEACnBC,mBAAA,CAAsB,eAAf,SAAO;mBARlC;;EAWqBD,KAAK,EAAC;AAAY;gEACnBC,mBAAA,CAAsB,eAAf,SAAO;mBAZlC;;EAmBSD,KAAK,EAAC;AAAW;;EAETA,KAAK,EAAC;AAAY;iEACnBC,mBAAA,CAAoB,eAAb,OAAK;oBAtB5B;;EAmCaD,KAAK,EAAC;AAAW;;EAnC9BG,GAAA;AAAA;;EAAAA,GAAA;AAAA;;EAuCaH,KAAK,EAAC;AAAkB;;uBAvCrCI,mBAAA,CAAAC,SAAA,SACEJ,mBAAA,CAgBY,OAhBZK,UAgBY,GAfRC,UAEQ,EACFC,mBAAA,2CAA4C,EACxCA,mBAAA,qGAAgG,EAChGP,mBAAA,CAGM,OAHNQ,UAGM,GAFFC,UAAsB,EACtBT,mBAAA,CAA0B;IAArBU,SAAc,EAANC,KAAA,CAAAC;EAAK,wBATtCC,UAAA,E,GAWgBb,mBAAA,CAIM,OAJNc,UAIM,GAHFC,UAAsB,EACtBf,mBAAA,CAA6B;IAAxBU,SAAiB,EAATC,KAAA,CAAAK;EAAQ,wBAbzCC,UAAA,GAcoBV,mBAAA,4FAAyF,C,GAEjGA,mBAAA,aAAgB,C,GAGxBP,mBAAA,CAQM,OARNkB,UAQM,GAPFlB,mBAAA,CAMO;IANAmB,QAAM,EAAAC,MAAA,QAAAA,MAAA,MApBrBC,cAAA,KAAAC,IAAA,KAoB+BC,QAAA,CAAAC,aAAA,IAAAD,QAAA,CAAAC,aAAA,IAAAF,IAAA,CAAa;MAChCtB,mBAAA,CAIM,OAJNyB,WAIM,GAHFC,WAAoB,E,gBACpB1B,mBAAA,CAA0D;IAAnD2B,IAAI,EAAC,MAAM;IAvBlC,uBAAAP,MAAA,QAAAA,MAAA,MAAAQ,MAAA,IAuB4CjB,KAAA,CAAAkB,OAAO,GAAAD,MAAA;IAAE7B,KAAK,EAAC;iDAAfY,KAAA,CAAAkB,OAAO,E,GACnC7B,mBAAA,CAAqF;IAA7E2B,IAAI,EAAC,QAAQ;IAAC5B,KAAK,EAAC,iBAAiB;IAAE+B,QAAQ,GAAGnB,KAAA,CAAAkB,OAAO,CAACE,IAAI;KAAI,IAAE,iBAxB5FC,WAAA,E,gCA6BIzB,mBAAA,mLAGU,G,kBAEVJ,mBAAA,CAQQC,SAAA,QA1CZ6B,WAAA,CAkC2BtB,KAAA,CAAAuB,WAAW,EAAtBL,OAAO;yBAAnB1B,mBAAA,CAQQ;MAR6BD,GAAG,EAAE2B,OAAO,CAACM,EAAE;MAAEpC,KAAK,EAAC;QACxDC,mBAAA,CAGM,OAHNoC,WAGM,GAFKC,IAAA,CAAAC,QAAQ,gB,cAAjBnC,mBAAA,CAAqC,KApC/CoC,WAAA,EAoCyC,IAAE,KApC3ChC,mBAAA,gBAqCmB8B,IAAA,CAAAC,QAAQ,gB,cAAjBnC,mBAAA,CAAyD,KArCnEqC,WAAA,EAAAC,gBAAA,CAqC4CZ,OAAO,CAACa,QAAQ,oBArC5DnC,mBAAA,e,GAuCQP,mBAAA,CAEM,OAFN2C,WAEM,GADJ3C,mBAAA,CAA4B,WAAAyC,gBAAA,CAAtBZ,OAAO,CAACA,OAAO,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}